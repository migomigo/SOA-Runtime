<wsdl:definitions name="UserAccountProcessService"
	targetNamespace="http://www.ebay.com/marketplace/registration/v1/services"
	xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/"
	xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://www.ebay.com/marketplace/registration/v1/services"
	xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<wsdl:types>
		<xs:schema attributeFormDefault="unqualified"
			elementFormDefault="qualified"
			targetNamespace="http://www.ebay.com/marketplace/registration/v1/services"
			xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/">
			<xs:simpleType name="Gender">
				<xs:annotation>
					<xs:documentation>
						Provides the values for Gender type
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Male">
						<xs:annotation>
							<xs:documentation>
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Female">
						<xs:annotation>
							<xs:documentation>
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
			<xs:complexType name="BaseValidationResponse">
				<xs:annotation>
					<xs:documentation>
						Response used for all the registration related
						validations.
					</xs:documentation>
					<xs:appinfo>
						<summary>
						</summary>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseResponse">
						<xs:sequence>
							<xs:element name="ValidationResult" type="xs:boolean">
								<xs:annotation>
									<xs:documentation>
										Result of the validate operation
									</xs:documentation>
									<xs:appinfo>
										<CallInfo>
											<AllCalls />
											<Returned>Always</Returned>
										</CallInfo>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="ValidateUserLoginNameRequestType">
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="userLoginName"
								type="xs:string" />
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="ValidateUserLoginNameResponseType">
				<xs:complexContent>
					<xs:extension base="tns:BaseValidationResponse">
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="ValidateRegistrationEmailAddressRequestType">
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="emailAddress"
								type="xs:string" />
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<!--
				<xs:element name="validateRegistrationEmailAddressResponse"
				type="tns:ValidateRegistrationEmailAddressResponseType">
				</xs:element>
			-->
			<xs:complexType name="ValidateRegistrationEmailAddressResponseType">
				<xs:complexContent>
					<xs:extension base="tns:BaseValidationResponse">
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<!-- Request Response for validateGovernmentIssuedId-->
			<!--
				<xs:element name="validateGovernmentIssuedIdRequest"
				type="tns:ValidateGovernmentIssuedIdRequestType">
			-->
			<xs:complexType name="ValidateGovernmentIssuedIdRequestType">
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1"
								name="governmentIssuedIdDetail" type="tns:GovernmentIssuedPersonId" />
							<xs:element maxOccurs="1" minOccurs="0" name="age"
								type="xs:date" />
							<xs:element maxOccurs="1" minOccurs="0" name="firstName"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="lastname"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="city"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="state"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="gender"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="1" name="countryCode"
								type="xs:token" />
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<!--</xs:element>-->
			<xs:complexType name="GovernmentIssuedPersonId">
					<xs:annotation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
					</xs:annotation>
			        <xs:sequence>
			              <xs:element name="id"
			                    type="xs:string" maxOccurs="1" minOccurs="1">
			              </xs:element>
			              <xs:element name="type"
			                    type="xs:token" maxOccurs="1" minOccurs="1">
			              </xs:element>
			        </xs:sequence>
			</xs:complexType>
			<xs:complexType name="ValidateGovernmentIssuedIdResponseType">
				<xs:complexContent>
					<xs:extension base="tns:BaseValidationResponse">
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<!-- End Request Response for validateGovernmentIssuedId-->
			<!--Start Request Response for validateCompanyDetail -->
			<!--
				<xs:element name="validateCompanyDetailRequest"
				type="tns:ValidateCompanyDetailRequestType">
			-->
			<xs:complexType name="ValidateCompanyDetailRequestType">
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="0"
								name="companyNameDetail" type="tns:CompanyNameDetail" />
							<xs:element maxOccurs="1" minOccurs="0" name="companyIdDetail"
								type="tns:CompanyIdDetail" />
							<xs:element maxOccurs="1" minOccurs="0" name="companyType"
								type="xs:token" />
							<xs:element maxOccurs="1" minOccurs="0" name="legalForm"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="1" name="countryCode"
								type="xs:token" />
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<!--</xs:element>-->
			<xs:complexType name="CompanyNameDetail">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="companyNamePart1"
						type="xs:string" />
					<xs:element maxOccurs="1" minOccurs="0" name="companyNamePart2"
						type="xs:string" />
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="CompanyIdDetail">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="companyNumberPart1"
						type="xs:string" />
					<xs:element maxOccurs="1" minOccurs="0" name="companyNumberPart2"
						type="xs:string" />
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ValidateCompanyDetailResponseType">
				<xs:complexContent>
					<xs:extension base="tns:BaseValidationResponse">
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<!--End Request Response for validateCompanyDetail -->
			<!--Start Request Response for validateAge-->
			<xs:complexType name="ValidateAgeRequestType">
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="age"
								type="xs:date" />
							<xs:element maxOccurs="1" minOccurs="1" name="countryCode"
								type="xs:token" />
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="ValidateAgeResponseType">
				<xs:complexContent>
					<xs:extension base="tns:BaseValidationResponse">
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>			
			<xs:complexType name="PersonName">
					<xs:annotation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
		        <xs:sequence>
		              <xs:element name="firstName" type="xs:string" maxOccurs="1" minOccurs="1">
		              </xs:element>
		              <xs:element name="middleName"
		                    type="xs:string" maxOccurs="1" minOccurs="0">
		              </xs:element>
		              <xs:element name="lastName" type="xs:string" maxOccurs="1" minOccurs="1">
		              </xs:element>
		              <xs:element name="salutation"
		                    type="xs:token" maxOccurs="1" minOccurs="0">
		              </xs:element>
		        </xs:sequence>
			</xs:complexType>				
			<!--End Request Response for validateOwnerName-->
			<!--start Request Response for ValidateRegistrationPhoneNumber-->
			<xs:complexType name="ValidateRegistrationPhoneNumberRequestType">
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="phoneNumber"
								type="tns:PhoneNumber" />
							<xs:element maxOccurs="1" minOccurs="1" name="countryCode"
								type="xs:token" />
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="PhoneNumber">
			<xs:annotation>
				<xs:appinfo>
					<typeLibrarySource library="UserServiceCommonTypeLibrary"
						namespace="http://www.ebay.com/marketplace/user/v1/types" />
				</xs:appinfo>
			</xs:annotation>
			<xs:sequence>
				<xs:element name="CountryPrefix" type="xs:string"
					maxOccurs="1" minOccurs="0"></xs:element>
				<xs:element name="AreaCode" type="xs:string" maxOccurs="1"
					minOccurs="0"></xs:element>
				<xs:element name="LocalNumberPart1" type="xs:string"
					maxOccurs="1" minOccurs="1"></xs:element>
				<xs:element name="LocalNumberPart2" type="xs:string"
					maxOccurs="1" minOccurs="0"></xs:element>
				<xs:element name="Extension" type="xs:string" maxOccurs="1"
					minOccurs="0"></xs:element>
			</xs:sequence>
		</xs:complexType>
			<xs:complexType name="ValidateRegistrationPhoneNumberResponseType">
				<xs:complexContent>
					<xs:extension base="tns:BaseValidationResponse">
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<!--End Request Response for ValidateRegistrationPhoneNumber-->
			<!-- User Account type defines different user accounts available -->
			<xs:simpleType name="UserAccountTypeEnum">
				<xs:restriction base="xs:token">
					<xs:enumeration value="UNKNOWN" />
					<xs:enumeration value="PRIVATE" />
					<xs:enumeration value="BUSINESS" />
				</xs:restriction>
			</xs:simpleType>
			<!-- User Profile State defines different user accounts available -->
			<xs:simpleType name="UserProfileStateEnum">
				<xs:restriction base="xs:token">
					<xs:enumeration value="FPA" />
					<xs:enumeration value="PPA" />
					<xs:enumeration value="FULL_MP_PARTICIPANT" />
				</xs:restriction>
			</xs:simpleType>
			<!--
				Identity Provider Type defines different user accounts available
			-->
			<xs:simpleType name="IdentityProviderTypeEnum">
				<xs:restriction base="xs:token">
					<xs:enumeration value="FaceBook" />
					<xs:enumeration value="EBAY" />
				</xs:restriction>
			</xs:simpleType>
			<xs:simpleType name="InvokerType">
						<xs:restriction base="xs:string">
							<xs:enumeration value="FacebookOnboarding"/>
							<xs:enumeration value="ebayRegistration"/>
							<xs:enumeration value="Mobile"/>
						</xs:restriction>
			</xs:simpleType>
			<!--  start Request Response for upgradeUserProfile -->
			<xs:element name="upgradeUserProfileRequest" type="tns:UpgradeUserProfileRequest" />
			<xs:complexType name="UpgradeUserProfileRequest">
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="0" name="userProfileState"
								type="tns:UserProfileStateEnum" />
							<xs:element maxOccurs="1" minOccurs="0"
								name="identityProviderType" type="tns:IdentityProviderTypeEnum" />
							<xs:element maxOccurs="1" minOccurs="0" name="accountType"
								type="xs:token" />
							<xs:element maxOccurs="1" minOccurs="0" name="ownerName"
								type="tns:PersonName" />
							<xs:element maxOccurs="1" minOccurs="0"
								name="RegistrationAddress" type="tns:Address" />
							<xs:element maxOccurs="1" minOccurs="0"
								name="PrimaryPhoneNumber" type="tns:PhoneNumber" />
							<xs:element maxOccurs="1" minOccurs="0"
								name="SecondaryPhoneNumber" type="tns:PhoneNumber" />

							<xs:element maxOccurs="1" minOccurs="0"
								name="GovernmentIssuedIdDetail" type="tns:GovernmentIssuedPersonId" />

							<xs:element maxOccurs="1" minOccurs="0"
								name="companyNameDetail" type="tns:CompanyNameDetail" />
							<xs:element maxOccurs="1" minOccurs="0" name="companyIdDetail"
								type="tns:CompanyIdDetail" />
							<xs:element maxOccurs="1" minOccurs="0" name="companyType"
								type="xs:token" />
							<xs:element maxOccurs="1" minOccurs="0" name="legalForm"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="age"
								type="xs:date" />
							<xs:element maxOccurs="1" minOccurs="0" name="stateOfBirth"
								type="xs:token" />
							<xs:element maxOccurs="1" minOccurs="0" name="cityOfBirth"
								type="xs:token" />
							<xs:element maxOccurs="1" minOccurs="0" name="gender"
								type="tns:Gender" />
							<xs:element maxOccurs="1" minOccurs="0" name="userLoginName"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="emailAddress"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="password"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="secretQuestion"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="secretAnswer"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="language"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="agreementGroup"
								type="tns:AgreementGroup" />
							<xs:element maxOccurs="1" minOccurs="0"
								name="countryOfResidenceCode" type="xs:token" />
							<xs:element name="registrationSite" type="xs:token"
								maxOccurs="1" minOccurs="1">
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="auditData"
								type="tns:AuditData" />
							<xs:element maxOccurs="1" minOccurs="0" name="continueOnError"
								type="xs:boolean" />
							<xs:element maxOccurs="1" minOccurs="1" name="invoker" type="tns:InvokerType"/>
							<!--
								Do we need site of registration? Do we need Local? Do we need
								user state?
							-->
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="upgradeUserProfileResponse" type="tns:UpgradeUserProfileResponse" />
			<xs:complexType name="UpgradeUserProfileResponse">
				<xs:complexContent>
					<xs:extension base="tns:BaseResponse">
						<xs:sequence>
							<xs:element minOccurs="0" name="ruvToken" type="xs:string" />
							<xs:element minOccurs="0" name="verificationProcessType"
								type="xs:token" />
							<xs:element minOccurs="0" name="riskLevel"
								type="xs:token" />								
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<!--End Request Response for registerAccount-->
			<!--start Request Response for registerAccount-->
			<xs:element name="registerAccountRequest" type="tns:RegisterAccountRequest" />
			<xs:complexType name="RegisterAccountRequest">
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="0" name="userProfileState"
								type="tns:UserProfileStateEnum" />
							<xs:element maxOccurs="1" minOccurs="0"
								name="identityProviderType" type="tns:IdentityProviderTypeEnum" />
							<!-- There should not be any business logic based on leadSource. If not provided the default will be WEB_REG -->
							<xs:element name="leadSource"
								type="xs:token" maxOccurs="1" minOccurs="0">
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="accountType"
								type="xs:token" />
							<xs:element maxOccurs="1" minOccurs="0" name="ownerName"
								type="tns:PersonName" />
							<xs:element maxOccurs="1" minOccurs="0"
								name="RegistrationAddress" type="tns:Address" />
							<xs:element maxOccurs="1" minOccurs="0"
								name="PrimaryPhoneNumber" type="tns:PhoneNumber" />
							<xs:element maxOccurs="1" minOccurs="0"
								name="SecondaryPhoneNumber" type="tns:PhoneNumber" />

							<xs:element maxOccurs="1" minOccurs="0"
								name="GovernmentIssuedIdDetail" type="tns:GovernmentIssuedPersonId" />

							<xs:element maxOccurs="1" minOccurs="0"
								name="companyNameDetail" type="tns:CompanyNameDetail" />
							<xs:element maxOccurs="1" minOccurs="0" name="companyIdDetail"
								type="tns:CompanyIdDetail" />
							<xs:element maxOccurs="1" minOccurs="0" name="companyType"
								type="xs:token" />
							<xs:element maxOccurs="1" minOccurs="0" name="legalForm"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="age"
								type="xs:date" />
							<xs:element maxOccurs="1" minOccurs="0" name="stateOfBirth"
								type="xs:token" />
							<xs:element maxOccurs="1" minOccurs="0" name="cityOfBirth"
								type="xs:token" />
							<xs:element maxOccurs="1" minOccurs="0" name="gender"
								type="tns:Gender" />
							<xs:element maxOccurs="1" minOccurs="0" name="userLoginName"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="emailAddress"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="password"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="secretQuestion"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="secretAnswer"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="language"
								type="xs:string" />
							<xs:element maxOccurs="1" minOccurs="0" name="agreementGroup"
								type="tns:AgreementGroup" />
							<xs:element maxOccurs="1" minOccurs="0"
								name="countryOfResidenceCode" type="xs:token" />
							<xs:element name="registrationSite" type="xs:token"
								maxOccurs="1" minOccurs="1">
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="auditData"
								type="tns:AuditData" />
							<xs:element maxOccurs="1" minOccurs="0" name="continueOnError"
								type="xs:boolean" />
							<xs:element maxOccurs="1" minOccurs="0" name="idpImmutableId"
								type="xs:long" />
							<!--
								Do we need site of registration? Do we need Local? Do we need
								user state?
							-->
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="AuditData">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="cobrandId"
						type="xs:token" />
					<xs:element maxOccurs="1" minOccurs="0" name="consumerHostName"
						type="xs:string" />
					<xs:element maxOccurs="1" minOccurs="0" name="deviceProperty"
						type="xs:string" />
						<xs:element maxOccurs="1" minOccurs="0" name="environment"
						type="tns:Environment" />
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="BrowserHeader">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="host" type="xs:string">
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="userAgent" type="xs:string">
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="acceptTypes" type="xs:string">
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="acceptLanguages" type="xs:string">
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="acceptEncoding" type="xs:string">
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="acceptCharset" type="xs:string">
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="timeZoneOffset" type="xs:string">
							</xs:element>
							
						</xs:sequence>
					</xs:complexType>
    
					<xs:complexType name="CookieInfo">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="guid" type="xs:string">
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="oldCookieId" type="xs:long">
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="oldCookieTimeStamp" type="xs:date">
							</xs:element>
						</xs:sequence>
					</xs:complexType>
    
					<xs:complexType name="Environment">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="0" name="browserHeader" type="tns:BrowserHeader">
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="cookieInfo" type="tns:CookieInfo">
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="ipAddress" type="xs:string">
							</xs:element>
							<xs:element maxOccurs="unbounded" minOccurs="0" name="xForwadedFor" type="xs:string">
							</xs:element>
						</xs:sequence>
					</xs:complexType>
			<xs:complexType name="Address">
				<xs:annotation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="name" type="xs:string" />
					<xs:element minOccurs="0" name="street1" type="xs:string" />
					<xs:element minOccurs="0" name="street2" type="xs:string" />
					<xs:element minOccurs="0" name="city" type="xs:string" />
					<xs:element minOccurs="0" name="county" type="xs:string" />
					<xs:element minOccurs="0" name="stateOrProvince" type="xs:string" />
					<xs:element minOccurs="0" name="country" type="xs:string" />
					<xs:element minOccurs="0" name="postalCode" type="xs:string" />
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="AgreementGroup">
				<xs:annotation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="agreement1" type="xs:boolean" />
					<xs:element minOccurs="0" name="agreement2" type="xs:boolean" />
					<xs:element minOccurs="0" name="agreement3" type="xs:boolean" />
					<xs:element minOccurs="0" name="agreement4" type="xs:boolean" />
				</xs:sequence>
			</xs:complexType>
			<xs:element name="registerAccountResponse" type="tns:RegisterAccountResponse" />
			<xs:complexType name="RegisterAccountResponse">
				<xs:complexContent>
					<xs:extension base="tns:BaseResponse">
						<xs:sequence>
							<xs:element minOccurs="0" name="ruvToken" type="xs:string" />
							<xs:element minOccurs="0" name="verificationProcessType"
								type="xs:token" />
							<xs:element minOccurs="0" name="riskLevel"
								type="xs:token" />	
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<!--End Request Response for registerAccount-->
			<xs:complexType name="RegistrationDataType">
				<xs:sequence>
				<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldName"
						type="xs:string" />
					<xs:element maxOccurs="1" minOccurs="0" name="firstName"
						type="xs:string" />
					<xs:element maxOccurs="1" minOccurs="0" name="middleName"
						type="xs:string" />
					<xs:element maxOccurs="1" minOccurs="0" name="lastName"
						type="xs:string" />
					<xs:element maxOccurs="1" minOccurs="0" name="salutation"
						type="xs:string" />
					<xs:element maxOccurs="1" minOccurs="0"
						name="RegistrationAddress" type="tns:Address" />
					<xs:element maxOccurs="1" minOccurs="0" name="PrimaryPhoneNumber"
						type="tns:PhoneNumber" />
					<xs:element maxOccurs="1" minOccurs="0"
						name="GovernmentIssuedIdDetail" type="tns:GovernmentIssuedPersonId" />
					<xs:element maxOccurs="1" minOccurs="0" name="companyNameDetail"
						type="tns:CompanyNameDetail" />
					<xs:element maxOccurs="1" minOccurs="0" name="companyIdDetail"
						type="tns:CompanyIdDetail" />
					<xs:element maxOccurs="1" minOccurs="0" name="companyType"
						type="xs:token" />
					<xs:element maxOccurs="1" minOccurs="0" name="legalForm"
						type="xs:string" />
					<xs:element maxOccurs="1" minOccurs="0" name="age" type="xs:date" />
					<xs:element maxOccurs="1" minOccurs="0" name="gender"
						type="tns:Gender" />
					<xs:element maxOccurs="1" minOccurs="0" name="userLoginName"
						type="xs:string" />
					<xs:element maxOccurs="1" minOccurs="0" name="emailAddress"
						type="xs:string" />
					<xs:element maxOccurs="1" minOccurs="0" name="password"
						type="xs:string" />
					<xs:element maxOccurs="1" minOccurs="0" name="secretQuestion"
						type="xs:string" />
					<xs:element maxOccurs="1" minOccurs="0" name="secretAnswer"
						type="xs:string" />
					<xs:element maxOccurs="1" minOccurs="0"
						name="countryOfResidenceCode" type="xs:token" />
					<xs:element name="registrationSite" type="xs:token"
						maxOccurs="1" minOccurs="0">
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="continueOnError"
						type="xs:boolean" />
					<!--
						Do we need site of registration? Do we need Local? Do we need user
						state?
					-->
				</xs:sequence>

			</xs:complexType>
			<!--Start Request Response for validateRegistrationData-->
			<xs:element name="validateRegistrationDataRequest" type="tns:ValidateRegistrationDataRequest" />
			<xs:complexType name="ValidateRegistrationDataRequest">
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">
						<xs:sequence>
							<xs:element maxOccurs="unbounded" minOccurs="0"
								name="RegistrationData" type="tns:RegistrationDataType" />
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="validateRegistrationDataResponse" type="tns:ValidateRegistrationDataResponse" />
			<xs:complexType name="ValidateRegistrationDataResponse">
				<xs:complexContent>
					<xs:extension base="tns:BaseValidationResponse">						
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<!--End Request Response for validateRegistrationData-->
			<xs:element name="validateSecretQuestionAndAnswerRequest"
				type="tns:ValidateSecretQuestionAndAnswerRequest" />
			<xs:complexType name="ValidateSecretQuestionAndAnswerRequest">
				<xs:sequence>

					<xs:element minOccurs="1" maxOccurs="1" name="question"
						type="xs:string">
					</xs:element>
					<xs:element minOccurs="1" maxOccurs="1" name="answer"
						type="xs:string">
					</xs:element>
					<xs:element minOccurs="1" maxOccurs="1" name="userId"
						type="xs:string">
					</xs:element>
					<xs:element minOccurs="1" maxOccurs="1" name="password"
						type="xs:string">
					</xs:element>
					<xs:element minOccurs="1" maxOccurs="1" name="siteId"
						type="xs:int">
					</xs:element>
					<xs:element minOccurs="1" maxOccurs="1" name="mobileDevice"
						type="xs:boolean">
					</xs:element>
					<xs:element minOccurs="1" maxOccurs="1" name="existingUser"
						type="xs:boolean">
					</xs:element>
					<xs:element name="customSecretQuestion" type="xs:boolean"
						maxOccurs="1" minOccurs="1"></xs:element>


				</xs:sequence>
			</xs:complexType>
			<xs:element name="validateSecretQuestionAndAnswerResponse"
				type="tns:ValidateSecretQuestionAndAnswerResponse" />
			<xs:complexType name="ValidateSecretQuestionAndAnswerResponse">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="errors"
						type="tns:ErrorMessage">
					</xs:element>
					<xs:element minOccurs="1" maxOccurs="1"
						name="validSecertQuestionAndAnswer" type="xs:boolean">
					</xs:element>
				</xs:sequence>
			</xs:complexType>

			<xs:element name="validatePasswordRequest" type="tns:ValidatePasswordRequest" />
			<xs:complexType name="ValidatePasswordRequest">
				<xs:sequence>
					<xs:sequence>
						<xs:element minOccurs="1" maxOccurs="1" name="password"
							type="xs:string">
						</xs:element>
						<xs:element minOccurs="1" maxOccurs="1" name="userId"
							type="xs:string">
						</xs:element>
						<xs:element minOccurs="1" maxOccurs="1" name="emailId"
							type="xs:string">
						</xs:element>

					</xs:sequence>
				</xs:sequence>
			</xs:complexType>
			<xs:element name="validatePasswordResponse" type="tns:ValidatePasswordResponse" />
			<xs:complexType name="ValidatePasswordResponse">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="1" name="weakPassword"
						type="xs:boolean">
					</xs:element>
					<xs:element minOccurs="0" maxOccurs="1" name="errors"
						type="tns:ErrorMessage">
					</xs:element>
					<xs:element minOccurs="1" maxOccurs="1" name="validPassword"
						type="xs:boolean">
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<!-- suggestUserLoginName request response -->
			<xs:element name="suggestUserLoginNameRequest" type="tns:SuggestUserLoginNameRequest" />
			<xs:complexType name="SuggestUserLoginNameRequest">
				<xs:sequence>
					<xs:sequence>
						<xs:element minOccurs="0" maxOccurs="1" name="emailAddress"
							type="xs:string">
						</xs:element>
						<xs:element minOccurs="0" maxOccurs="1" name="dateOfBirth"
							type="xs:date">
						</xs:element>
						<xs:element minOccurs="0" maxOccurs="1" name="phoneNumber"
							type="tns:PhoneNumber">
						</xs:element>
						<xs:element minOccurs="0" maxOccurs="1" name="ownerFirstName"
							type="xs:string">
						</xs:element>
						<xs:element minOccurs="0" maxOccurs="1" name="ownerLastName"
							type="xs:string">
						</xs:element>
						<xs:element minOccurs="0" maxOccurs="1" name="postalCode"
							type="xs:string">
						</xs:element>
						<xs:element minOccurs="0" maxOccurs="1"
							name="userEnteredLoginName" type="xs:string">
						</xs:element>
						<xs:element maxOccurs="1" minOccurs="0"
							name="countryOfResidenceCode" type="xs:token" />
						<xs:element name="registrationSite" type="xs:token"
							maxOccurs="1" minOccurs="1"/>
					</xs:sequence>
				</xs:sequence>
			</xs:complexType>
			<xs:element name="suggestUserLoginNameResponse" type="tns:SuggestUserLoginNameResponse" />
			<xs:complexType name="SuggestUserLoginNameResponse">
				<xs:complexContent>
					<xs:extension base="tns:BaseValidationResponse">
						<xs:sequence>
							<xs:element minOccurs="0" maxOccurs="unbounded"
								name="suggestedUserLoginName" type="xs:string" />
							<xs:element minOccurs="0" name="isUserLoginNameAvailable"
								type="xs:boolean" />
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>			
			<xs:simpleType name="AckValue">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the error is a severe error
						(causing the request to fail) or an
						informational error (a warning)
						that should be
						communicated to the user.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Success">
						<xs:annotation>
							<xs:documentation>
								The request was processed successfully,
								but
								something occurred that may affect
								your application or the user.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Failure">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was
								not
								processed successfully. When a
								serious application-level error
								occurs,
								the error is returned instead of the
								business data.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Warning">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was
								processed successfully but with some
								warnings.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="PartialFailure">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was
								processed successfully but with some
								warnings.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
			<xs:complexType abstract="true" name="BaseRequest">
				<xs:annotation>
					<xs:documentation>
						This is the base class for request container for
						all service operations.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="extension"
						type="tns:ExtensionType" />
				</xs:sequence>
			</xs:complexType>
			<xs:complexType abstract="true" name="BaseResponse">
				<xs:annotation>
					<xs:documentation>
						Base response container for all service
						operations. Contains error information
						associated with the request.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="ack" type="tns:AckValue">
						<xs:annotation>
							<xs:documentation />
							<xs:appinfo>
								<CallInfo>
									<AllCalls />
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="errorMessage" type="tns:ErrorMessage">
						<xs:annotation>
							<xs:documentation>
								Information for an error or warning that
								occurred when eBay processed the
								request.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls />
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="version" type="xs:string">
						<xs:annotation>
							<xs:documentation />
							<xs:appinfo>
								<CallInfo>
									<AllCalls />
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="timestamp" type="xs:dateTime">
						<xs:annotation>
							<xs:documentation />
							<xs:appinfo>
								<CallInfo>
									<AllCalls />
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="extension"
						type="tns:ExtensionType" />
				</xs:sequence>
			</xs:complexType>
			<xs:simpleType name="ErrorCategory">
				<xs:annotation>
					<xs:documentation>
						Documentation goes here.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:restriction base="xs:token">
					<xs:enumeration value="System" />
					<xs:enumeration value="Application" />
					<xs:enumeration value="Request" />
				</xs:restriction>
			</xs:simpleType>
			<xs:complexType name="ErrorData">
				<xs:annotation>
					<xs:documentation>
						Documentation goes here
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="errorId" type="xs:long" />
					<xs:element name="domain" type="xs:string" />
					<xs:element minOccurs="0" name="subdomain" type="xs:string" />
					<xs:element name="severity" type="tns:ErrorSeverity" />
					<xs:element name="category" type="tns:ErrorCategory" />
					<xs:element name="message" type="xs:string" />
					<xs:element minOccurs="0" name="exceptionId" type="xs:token" />
					<xs:element maxOccurs="unbounded" minOccurs="0" name="parameter"
						type="tns:ErrorParameter" />
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ErrorMessage">
				<xs:annotation>
					<xs:documentation>
						Documentation goes here
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<!--

					processContents="lax" /> </xs:sequence>
				-->
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="error"
						type="tns:ErrorData" />
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ErrorParameter">
				<xs:annotation>
					<xs:documentation>
						Documentation goes here
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleContent>
					<xs:extension base="xs:string">
						<xs:attribute name="name" type="xs:string" use="optional" />
					</xs:extension>
				</xs:simpleContent>
			</xs:complexType>
			<xs:simpleType name="ErrorSeverity">
				<xs:annotation>
					<xs:documentation>
						Documentation goes here.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:restriction base="xs:token">
					<xs:enumeration value="Error" />
					<xs:enumeration value="Warning" />
				</xs:restriction>
			</xs:simpleType>
			<xs:complexType name="ExtensionType">
				<xs:annotation>
					<xs:documentation>
						Documentation goes here
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="id" type="xs:positiveInteger" />
					<xs:element name="version" type="xs:string" />
					<xs:element name="contentType" type="xs:string" />
					<xs:element name="value" type="xs:string" />

				</xs:sequence>
			</xs:complexType>
			<xs:element name="getVersionRequest" type="tns:GetVersionRequest" />
			<xs:complexType name="GetVersionRequest">
				<xs:annotation>
					<xs:documentation>
						Document goes here
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">
						<xs:sequence />
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="getVersionResponse" type="tns:GetVersionResponse" />
			<xs:complexType name="GetVersionResponse">
				<xs:annotation>
					<xs:documentation>
						Document goes here
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseResponse">
						<xs:sequence>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
		</xs:schema>
	</wsdl:types>
	<wsdl:message name="getVersionRequest">
		<wsdl:part element="tns:getVersionRequest" name="params" />
	</wsdl:message>
	<wsdl:message name="getVersionResponse">
		<wsdl:part element="tns:getVersionResponse" name="params" />
	</wsdl:message>
	<message name="registerAccountRequest">
		<wsdl:part name="params" element="tns:registerAccountRequest" />
	</message>
	<message name="registerAccountResponse">
		<wsdl:part name="params" element="tns:registerAccountResponse" />
	</message>
	<wsdl:message name="validatePasswordRequest">
		<wsdl:part name="validatePasswordRequest" element="tns:validatePasswordRequest"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="validatePasswordResponse">
		<wsdl:part name="validatePasswordResponse" element="tns:validatePasswordResponse"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="validateSecretQuestionAndAnswerRequest">
		<wsdl:part name="validateSecretQuestionAndAnswerRequest"
			element="tns:validateSecretQuestionAndAnswerRequest"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="validateSecretQuestionAndAnswerResponse">
		<wsdl:part name="validateSecretQuestionAndAnswerResponse"
			element="tns:validateSecretQuestionAndAnswerResponse"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="suggestUserLoginNameRequest">
		<wsdl:part name="suggestUserLoginNameRequest" element="tns:suggestUserLoginNameRequest"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="suggestUserLoginNameResponse">
		<wsdl:part name="suggestUserLoginNameResponse" element="tns:suggestUserLoginNameResponse"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="upgradeUserProfileRequest">
		<wsdl:part name="upgradeUserProfileRequest" element="tns:upgradeUserProfileRequest"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="upgradeUserProfileResponse">
		<wsdl:part name="upgradeUserProfileResponse" element="tns:upgradeUserProfileResponse"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="validateRegistrationDataRequest">
		<wsdl:part name="validateRegistrationDataRequest" element="tns:validateRegistrationDataRequest"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="validateRegistrationDataResponse">
		<wsdl:part name="validateRegistrationDataResponse" element="tns:validateRegistrationDataResponse"></wsdl:part>
	</wsdl:message>
	<wsdl:portType name="UserAccountProcessServicePort">
		<wsdl:operation name="getVersion">
			<wsdl:input message="tns:getVersionRequest" />
			<wsdl:output message="tns:getVersionResponse" />
		</wsdl:operation>
		<wsdl:operation name="registerAccount">
			<wsdl:input message="tns:registerAccountRequest" />
			<wsdl:output message="tns:registerAccountResponse" />
		</wsdl:operation>


		<wsdl:operation name="suggestUserLoginName">
			<wsdl:input message="tns:suggestUserLoginNameRequest"></wsdl:input>
			<wsdl:output message="tns:suggestUserLoginNameResponse"></wsdl:output>
		</wsdl:operation>

		<wsdl:operation name="upgradeUserProfile">
			<wsdl:input message="tns:upgradeUserProfileRequest"></wsdl:input>
			<wsdl:output message="tns:upgradeUserProfileResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="validateRegistrationData">
			<wsdl:input message="tns:validateRegistrationDataRequest"></wsdl:input>
			<wsdl:output message="tns:validateRegistrationDataResponse"></wsdl:output>
		</wsdl:operation>
	</wsdl:portType>
	<wsdl:binding name="UserAccountProcessServiceHttpBinding"
		type="tns:UserAccountProcessServicePort">
		<http:binding verb="POST" />
		<wsdl:operation name="getVersion">
			<http:operation location="/getVersion" />
			<wsdl:input>
				<mime:content part="params" type="application/x-www-form-urlencoded" />
			</wsdl:input>
			<wsdl:output>
				<mime:content part="params" type="text/xml" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="registerAccount">
			<http:operation location="/registerAccount" />
			<wsdl:input>
				<mime:content part="params" type="application/x-www-form-urlencoded" />
			</wsdl:input>
			<wsdl:output>
				<mime:content part="params" type="text/xml" />
			</wsdl:output>
		</wsdl:operation>		
		<wsdl:operation name="suggestUserLoginName">
			<http:operation location="/suggestUserLoginName" />
			<wsdl:input>
				<mime:content part="parameters" type="application/x-www-form-urlencoded" />
			</wsdl:input>
			<wsdl:output>
				<mime:content part="parameters" type="text/xml" />
			</wsdl:output>
		</wsdl:operation>	
		<wsdl:operation name="upgradeUserProfile">
			<http:operation location="/upgradeUserProfile" />
			<wsdl:input>
				<mime:content part="parameters" type="application/x-www-form-urlencoded" />
			</wsdl:input>
			<wsdl:output>
				<mime:content part="parameters" type="text/xml" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="validateRegistrationData">
			<http:operation location="/validateRegistrationData" />
			<wsdl:input>
				<mime:content part="parameters" type="application/x-www-form-urlencoded" />
			</wsdl:input>
			<wsdl:output>
				<mime:content part="parameters" type="text/xml" />
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:binding name="UserAccountProcessServiceSOAPBinding"
		type="tns:UserAccountProcessServicePort">
		<soap:binding style="document"
			transport="http://schemas.xmlsoap.org/soap/http" />
		<wsdl:operation name="getVersion">
			<soap:operation
				soapAction="http://www.ebay.com/marketplace/registration/v1/services/getVersion" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="registerAccount">
			<soap:operation
				soapAction="http://www.ebay.com/marketplace/registration/v1/services/registerAccount" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>		
		<wsdl:operation name="suggestUserLoginName">
			<soap:operation
				soapAction="http://www.ebay.com/marketplace/registration/v1/services/suggestUserLoginName" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>		
		<wsdl:operation name="upgradeUserProfile">
			<soap:operation
				soapAction="http://www.ebay.com/marketplace/registration/v1/services/upgradeUserProfile" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="validateRegistrationData">
			<soap:operation
				soapAction="http://www.ebay.com/marketplace/registration/v1/services/validateRegistrationData" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:service name="UserAccountProcessService">
		<wsdl:documentation>
			<Version>1.0.0</Version>
		</wsdl:documentation>
		<wsdl:port binding="tns:UserAccountProcessServiceHttpBinding"
			name="UserAccountProcessServiceHttpPort">
			<http:address
				location="https://svcs.ebay.com/services/registration/v1/UserAccountProcessService" />
		</wsdl:port>
		<wsdl:port binding="tns:UserAccountProcessServiceSOAPBinding"
			name="UserAccountProcessServiceSOAPPort">
			<soap12:address
				location="https://svcs.ebay.com/services/registration/v1/UserAccountProcessService" />
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>
