<wsdl:definitions name="ItemClassificationSupportService" targetNamespace="http://www.ebay.com/marketplace/classification/v1/services" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://www.ebay.com/marketplace/classification/v1/services" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<wsdl:types>
		<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.ebay.com/marketplace/classification/v1/services">
			<xs:simpleType name="AckValue">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the error is a severe error
						(causing the request to fail) or an
						informational error (a warning)
						that should be
						communicated to the user.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Success">
						<xs:annotation>
							<xs:documentation>
								The request was processed successfully,
								but
								something occurred that may affect
								your application or the user.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Failure">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was
								not
								processed successfully. When a
								serious application-level error
								occurs,
								the error is returned instead of the
								business data.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Warning">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was
								processed successfully but with some
								warnings.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="PartialFailure">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was
								processed successfully but with some
								warnings.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
			<xs:complexType abstract="true" name="BaseRequest">
				<xs:annotation>
					<xs:documentation>
						This is the base class for request container for
						all service operations.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="extension" type="tns:ExtensionType"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType abstract="true" name="BaseResponse">
				<xs:annotation>
					<xs:documentation>
						Base response container for all service
						operations. Contains error information
						associated with the request.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="ack" type="tns:AckValue">
						<xs:annotation>
							<xs:documentation/>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="errorMessage" type="tns:ErrorMessage">
						<xs:annotation>
							<xs:documentation>
								Information for an error or warning that
								occurred when eBay processed the
								request.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="version" type="xs:string">
						<xs:annotation>
							<xs:documentation/>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="timestamp" type="xs:dateTime">
						<xs:annotation>
							<xs:documentation/>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="extension" type="tns:ExtensionType"/>
				</xs:sequence>
			</xs:complexType>
			<xs:simpleType name="ErrorCategory">
				<xs:annotation>
					<xs:documentation>
						Documentation goes here.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:restriction base="xs:token">
					<xs:enumeration value="System"/>
					<xs:enumeration value="Application"/>
					<xs:enumeration value="Request"/>
				</xs:restriction>
			</xs:simpleType>
			<xs:complexType name="ErrorData">
				<xs:annotation>
					<xs:documentation>
						Documentation goes here
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="errorId" type="xs:long"/>
					<xs:element name="domain" type="xs:string"/>
					<xs:element minOccurs="0" name="subdomain" type="xs:string"/>
					<xs:element name="severity" type="tns:ErrorSeverity"/>
					<xs:element name="category" type="tns:ErrorCategory"/>
					<xs:element name="message" type="xs:string"/>
					<xs:element minOccurs="0" name="exceptionId" type="xs:token"/>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="parameter" type="tns:ErrorParameter"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ErrorMessage">
				<xs:annotation>
					<xs:documentation>
						Documentation goes here
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xs:annotation>
				<!--

					processContents="lax" /> </xs:sequence>
				-->
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="error" type="tns:ErrorData"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ErrorParameter">
				<xs:annotation>
					<xs:documentation>
						Documentation goes here
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleContent>
					<xs:extension base="xs:string">
						<xs:attribute name="name" type="xs:string" use="optional"/>
					</xs:extension>
				</xs:simpleContent>
			</xs:complexType>
			<xs:simpleType name="ErrorSeverity">
				<xs:annotation>
					<xs:documentation>
						Documentation goes here.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:restriction base="xs:token">
					<xs:enumeration value="Error"/>
					<xs:enumeration value="Warning"/>
				</xs:restriction>
			</xs:simpleType>
			<xs:complexType name="ExtensionType">
				<xs:annotation>
					<xs:documentation>
						Documentation goes here
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="id" type="xs:positiveInteger"/>
					<xs:element name="version" type="xs:string"/>
					<xs:element name="contentType" type="xs:string"/>
					<xs:element name="value" type="xs:string"/>

				</xs:sequence>
			</xs:complexType>
			<xs:element name="getVersionRequest" type="tns:GetVersionRequest"/>
			<xs:complexType name="GetVersionRequest">
				<xs:annotation>
					<xs:documentation>
						Document goes here
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">

					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="getVersionResponse" type="tns:GetVersionResponse"/>
			<xs:complexType name="GetVersionResponse">
				<xs:annotation>
					<xs:documentation>
						Document goes here
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseResponse">

					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:element name="classifyItemsByItemIdsRequest" type="tns:ClassifyItemsByItemIdsRequest">
				<xs:annotation>
					<xs:documentation>Batch operation for classifying multiple items
						given the ItemId and optionally a list of classifiers to run. By
						default all classifiers are run. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="classifyItemsByItemIdsResponse" type="tns:ClassifyItemsByItemIdsResponse">
				<xs:annotation>
					<xs:documentation>A list of ClassifyItemByItemIdResponse for batch
						operation</xs:documentation>
				</xs:annotation>
			</xs:element>

			<xs:complexType name="ClassifyItemsByItemIdsRequest">
				<xs:annotation>
					<xs:documentation>A list of ClassifyItemByItemIdRequest
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">
						<xs:sequence>
							<xs:element maxOccurs="unbounded" minOccurs="1" name="classifyItemByItemIdRequest" type="tns:ClassifyItemByItemIdRequest">
								<xs:annotation>
									<xs:documentation>A list of ClassifyItemByItemIdRequest
									</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:complexType name="ClassifyItemsByItemIdsResponse">
				<xs:annotation>
					<xs:documentation>A list of ClassifyItemByItemIdResponse
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseResponse">
						<xs:sequence>
							<xs:element maxOccurs="unbounded" minOccurs="1" name="classifyItemByItemIdResponse" type="tns:ClassifyItemByItemIdResponse">
								<xs:annotation>
									<xs:documentation>A list of ClassifyItemByItemIdResponse
									</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:complexType name="ClassifyItemByItemIdRequest">
				<xs:annotation>
					<xs:documentation>Classification request for a single item by
						ItemId </xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="itemId" type="xs:string">
						<xs:annotation>
							<xs:documentation>The eBay ItemId. The same ItemId is sent back
								to the client in service response so that client can correlate
								response with request in batch processing mode.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="classifiersToRun" type="tns:ClassifierNameList">
						<xs:annotation>
							<xs:documentation>A list of classifiers to run for classifying
								the item. Current classifier names are &quot;ItemAccessoryClassifier&quot; and &quot;ItemQualityClassifier&quot;. Note that this is an optional parameter and all
								classifiers are run by default </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>


			<xs:complexType name="ClassifyItemByItemIdResponse">
				<xs:annotation>
					<xs:documentation>Response to a classification request for a single
						item by ItemId </xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="itemId" type="xs:string">
						<xs:annotation>
							<xs:documentation>The same ItemId as in the request is sent back
								to the client in service response so that client can correlate
								response with request in batch processing mode.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="unbounded" minOccurs="1" name="classificationOrder" type="tns:ClassificationOrder">
						<xs:annotation>
							<xs:documentation>The order in which the classifiers were run(to
								satisfy dependency requirements)</xs:documentation>
						</xs:annotation>
					</xs:element>

					<xs:element name="classificationResults" type="tns:ClassificationResultsWithDebugInfoList">
						<xs:annotation>
							<xs:documentation>The results from running one or more classifiers on an item along with debug information on the classification internals

</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>

			<xs:complexType name="ClassificationOrder">
				<xs:annotation>
					<xs:documentation>The order in which the classifiers were run(to
						satisfy dependency requirements)</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="classifierName" type="xs:token">
						<xs:annotation>
							<xs:documentation>The name of the classifier</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="classifierOrder" type="xs:int">
						<xs:annotation>
							<xs:documentation>What was the order in which the classifier was
								run. The first classifier gets an order of 1.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>




			<xs:complexType name="ClassifierNameList">
				<xs:annotation>
					<xs:documentation>A list of classifier names</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="ClassificationDomainTypeLibrary" namespace="http://www.ebay.com/marketplace/classification/v1/types"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="1" name="classifierName" type="xs:token">
						<xs:annotation>
							<xs:documentation>A list of one or more classifier names
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="NameValuePair">
				<xs:annotation>
					<xs:documentation>
						An entity to hold a name and its value(s)
			</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="ClassificationDomainTypeLibrary" namespace="http://www.ebay.com/marketplace/classification/v1/types"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="name" type="xs:string">
						<xs:annotation>
							<xs:documentation>The name</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="unbounded" minOccurs="1" name="value" type="xs:string">
						<xs:annotation>
							<xs:documentation>The value(s) for the name</xs:documentation>
						</xs:annotation>
					</xs:element>

				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="NameValuePairs">
				<xs:annotation>
					<xs:documentation>A list of NameValuePair</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="ClassificationDomainTypeLibrary" namespace="http://www.ebay.com/marketplace/classification/v1/types"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="1" name="nameValuePair" type="tns:NameValuePair">
						<xs:annotation>
							<xs:documentation>A list of NameValuePair</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
        
            <xs:complexType name="ClassificationResultsWithDebugInfo">
                <xs:annotation>
                	<xs:documentation>The classification result from a classifier along with additional debug information</xs:documentation>
                </xs:annotation>
                <xs:sequence>
            		<xs:element name="classifierName" type="xs:token">
                        <xs:annotation>
                        	<xs:documentation>Name of the classifier</xs:documentation>
                        </xs:annotation>
            		</xs:element>
            		<xs:element name="result" type="tns:NameValuePairs">
                        <xs:annotation>
                        	<xs:documentation>Classification Result</xs:documentation>
                        </xs:annotation>
            		</xs:element>
            		<xs:element name="debugInfo" type="tns:NameValuePairs">
            			<xs:annotation>
            				<xs:documentation>Debug information on the classification internals</xs:documentation>
            			</xs:annotation>
                    </xs:element>
            	</xs:sequence>
            </xs:complexType>
		
            <xs:complexType name="ClassificationResultsWithDebugInfoList">
                <xs:annotation>
                	<xs:documentation>A list of ClassificationResultsWithDebugInfo</xs:documentation>
                </xs:annotation>
                <xs:sequence>
            		<xs:element maxOccurs="unbounded" minOccurs="1" name="classificationResultWithDebugInfo" type="tns:ClassificationResultsWithDebugInfo">
            			<xs:annotation>
            				<xs:documentation>A list of ClassificationResultsWithDebugInfo</xs:documentation>
                        </xs:annotation>
                    </xs:element>
            	</xs:sequence>
            </xs:complexType>
		</xs:schema>
	</wsdl:types>
	<wsdl:message name="getVersionRequest">
		<wsdl:part element="tns:getVersionRequest" name="params"/>
	</wsdl:message>
	<wsdl:message name="getVersionResponse">
		<wsdl:part element="tns:getVersionResponse" name="params"/>
	</wsdl:message>
	<wsdl:message name="classifyItemsByItemIdsRequest">
		<wsdl:part element="tns:classifyItemsByItemIdsRequest" name="params">
			<wsdl:documentation>Batch operation for classifying multiple items given the ItemId and optionally a list of classifiers to run. By default all classifiers are run.</wsdl:documentation>
        </wsdl:part>
	</wsdl:message>
	<wsdl:message name="classifyItemsByItemIdsResponse">
		<wsdl:part element="tns:classifyItemsByItemIdsResponse" name="params">
			<wsdl:documentation/>
        </wsdl:part>
	</wsdl:message>
	<wsdl:portType name="ItemClassificationSupportServicePort">
		<wsdl:operation name="getVersion">
			<wsdl:documentation>Used for ensuring that a service is available (availability monitoring), and ensuring that the metrics relating to a service can be accessed for monitoring. 

			</wsdl:documentation>
			<wsdl:input message="tns:getVersionRequest"/>
			<wsdl:output message="tns:getVersionResponse"/>
		</wsdl:operation>

		<wsdl:operation name="classifyItemsByItemIds">
			<wsdl:documentation>This operation is used to classify items given their eBay ItemIds and get debug information on the classification internals. </wsdl:documentation>
			<wsdl:input message="tns:classifyItemsByItemIdsRequest"/>
			<wsdl:output message="tns:classifyItemsByItemIdsResponse"/>
		</wsdl:operation>
	</wsdl:portType>
	<wsdl:binding name="ItemClassificationSupportServiceHttpBinding" type="tns:ItemClassificationSupportServicePort">
		<http:binding verb="POST"/>
		<wsdl:operation name="getVersion">
			<http:operation location="/getVersion"/>
			<wsdl:input>
				<mime:content type="application/x-www-form-urlencoded"/>
			</wsdl:input>
			<wsdl:output>
				<mime:content type="text/xml"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="classifyItemsByItemIds">
			<http:operation location="/classifyItemsByItemIds"/>
			<wsdl:input>
				<mime:content type="application/x-www-form-urlencoded"/>
			</wsdl:input>
			<wsdl:output>
				<mime:content type="text/xml"/>
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:binding name="ItemClassificationSupportServiceSOAPBinding" type="tns:ItemClassificationSupportServicePort">
		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<wsdl:operation name="getVersion">
			<soap:operation soapAction="http://www.ebay.com/marketplace/classification/v1/services/getVersion"/>
			<wsdl:input>
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="classifyItemsByItemIds">
			<soap:operation soapAction="http://www.ebay.com/marketplace/classification/v1/services/classifyItemsByItemIds"/>
			<wsdl:input>
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:service name="ItemClassificationSupportService">
		<wsdl:documentation>
			<Version>1.0.0</Version>
			ItemClassificationSupportService classifies eBay items based on the ItemIds and returns debug information on each classifier. This is basically the support service for ItemClassificationService. Internally it gets all the required item fields like Title, Price, Seller Rating, Shipping, etc from the caty and classifies the item by calling one or more classifiers. For example, an item maybe classified as Accessory or Not, and/or classified as Miscategorized or Not, etc. The service has an embedded classifier dependency logic that ensures that all prerequisite classifiers(if any) are run prior to running a dependent classifier. For e.g. if AccessoryClassifier is dependent on ItemQualityClassifier, then we will always run ItemQualityClassifier prior to AccessoryClassifier. 
		</wsdl:documentation>
		<wsdl:port binding="tns:ItemClassificationSupportServiceHttpBinding" name="ItemClassificationSupportServiceHttpPort">
			<http:address location="https://svcs.ebay.com/services/classification/v1/ItemClassificationSupportService"/>
		</wsdl:port>
		<wsdl:port binding="tns:ItemClassificationSupportServiceSOAPBinding" name="ItemClassificationSupportServiceSOAPPort">
			<soap12:address location="https://svcs.ebay.com/services/classification/v1/ItemClassificationSupportService"/>
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>
