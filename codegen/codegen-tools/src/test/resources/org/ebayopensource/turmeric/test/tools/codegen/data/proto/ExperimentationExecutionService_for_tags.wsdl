<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="ExperimentationExecutionService" targetNamespace="http://www.ebay.com/marketplace/experimentation/v1/services" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://www.ebay.com/marketplace/experimentation/v1/services" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns="http://schemas.xmlsoap.org/wsdl/">
	<wsdl:types>
		<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" 
				targetNamespace="http://www.ebay.com/marketplace/experimentation/v1/services" 
				xmlns:tns="http://www.ebay.com/marketplace/experimentation/v1/services" 
				xmlns:xs="http://www.w3.org/2001/XMLSchema">
				
			<xs:element name="getExperimentsRequest" type="tns:GetExperimentsRequest"/>
			<xs:element name="getExperimentsResponse" type="tns:GetExperimentsResponse"/>
			<xs:element name="recordTreatmentsServedRequest" type="tns:RecordTreatmentsServedRequest"/>
			<xs:element name="recordTreatmentsServedResponse" type="tns:RecordTreatmentsServedResponse"/>
			<xs:element name="recordFactsRequest" type="tns:RecordFactsRequest"/>
			<xs:element name="recordFactsResponse" type="tns:RecordFactsResponse"/>
			
			<xs:complexType name="ExtensionType">											
				<xs:sequence>
					<xs:element name="id" type="xs:positiveInteger"/>
					<xs:element name="version" type="xs:string"/>
					<xs:element name="contentType" type="xs:string"/>
					<xs:element name="value" type="xs:string"/>

				</xs:sequence>
			</xs:complexType>
			
			<xs:complexType name="GetExperimentsRequest">
				<xs:annotation>
					<xs:documentation>Request object to retrieve the list of Experiments.</xs:documentation>
					<xs:appinfo/>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseServiceRequest">
						<xs:sequence>
							<xs:element name="extension" type="tns:ExtensionType" minOccurs="0" maxOccurs="unbounded"/>							
							<xs:element name="client" type="tns:Client" maxOccurs="1" minOccurs="1"/>
							<xs:element name="sampleCriteria" type="tns:SampleCriteria" maxOccurs="1" minOccurs="1"/>							
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			
			<xs:complexType name="GetExperimentsResponse">
				<xs:annotation>
					<xs:documentation>Response object to hold the list of experiments.</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseServiceResponse">
						<xs:sequence>
							<xs:element name="extension" type="tns:ExtensionType" minOccurs="0" maxOccurs="unbounded"/>							
							<xs:element maxOccurs="unbounded" minOccurs="1" name="experiment" type="tns:Experiment"/>							
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="RecordTreatmentsServedRequest">
				<xs:annotation>
					<xs:documentation>Request object to record the served treatments.</xs:documentation>
					<xs:appinfo/>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseServiceRequest">
						<xs:sequence>
							<xs:element name="extension" type="tns:ExtensionType" minOccurs="0" maxOccurs="unbounded"/>							
							<xs:element maxOccurs="1" minOccurs="1" name="client" type="tns:Client"/>
							<xs:element maxOccurs="1" minOccurs="1" name="sampleCriteria" type="tns:SampleCriteria"/>
							<xs:element maxOccurs="unbounded" minOccurs="1" name="treatment" type="tns:Treatment"/>							
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			
			<xs:complexType name="RecordTreatmentsServedResponse">
				<xs:annotation>
					<xs:documentation>Response object to hold the list of treatments served.</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseServiceResponse">
						<xs:sequence>
							<xs:element name="extension" type="tns:ExtensionType" minOccurs="0" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="RecordFactsRequest">
				<xs:annotation>
					<xs:documentation>Request object passed to record the facts.</xs:documentation>
					<xs:appinfo/>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseServiceRequest">
						<xs:sequence>
							<xs:element name="extension" type="tns:ExtensionType" minOccurs="0" maxOccurs="unbounded"/>
							<xs:element maxOccurs="1" minOccurs="1" name="client" type="tns:Client"/>
							<xs:element maxOccurs="1" minOccurs="1" name="sampleCriteria" type="tns:SampleCriteria"/>
							<xs:element maxOccurs="unbounded" minOccurs="1" name="fact" type="tns:Fact"/>							
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			
			<xs:complexType name="RecordFactsResponse">
				<xs:annotation>
					<xs:documentation>Response object to hold the recorded facts.</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseServiceResponse">
						<xs:sequence>
							<xs:element name="extension" type="tns:ExtensionType" minOccurs="0" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			
			<xs:complexType name="Client">
				<xs:annotation>
					<xs:documentation>Object to hold the client information</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="globalId" type="xs:string" maxOccurs="1" minOccurs="1"/>
					<xs:element name="applicationId" type="xs:string" maxOccurs="1" minOccurs="0"/>
					<xs:element name="subApplicationId" type="xs:string" maxOccurs="1" minOccurs="0"/>
				</xs:sequence>
			</xs:complexType>
			
			<xs:complexType name="SampleCriteria">
				<xs:annotation>
					<xs:documentation>Object to hold Sample Identity and criteriaList. SampleIdentity is GUID for eBay marketplace.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="sampleIdentity" type="tns:SampleIdentity" minOccurs="1" maxOccurs="unbounded"/>
					<xs:element name="criteria" type="tns:Criteria" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:complexType>			
			
			<xs:complexType name="SampleIdentity">
				<xs:sequence>		
					<xs:element name="SampleIdentityType" type="xs:token" maxOccurs="1" minOccurs="1">
						<xs:annotation>
							<xs:documentation>
								Sample Identity Type
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SampleIdentityValue" type="xs:string" maxOccurs="1" minOccurs="1">
						<xs:annotation>
							<xs:documentation>
								Value of the above mentioned SampleIdentityType
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			
			<xs:complexType name="Criteria">
				<xs:sequence>		
					<xs:element name="CriteriaType" type="xs:token" maxOccurs="1" minOccurs="1">
						<xs:annotation>
							<xs:documentation>
								Criteria Type
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CriteriaValue" type="xs:string" maxOccurs="1" minOccurs="1">
						<xs:annotation>
							<xs:documentation>
								Value of the above mentioned CriteriaType
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			
			<xs:complexType name="Experiment">
				<xs:annotation>
					<xs:documentation>ExperimentsServed object extends Experiment object</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="experimentId" type="xs:long"/>
					<xs:element maxOccurs="1" minOccurs="1" name="experimentName" type="xs:string"/>
					<xs:element name="treatment" type="tns:Treatment" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:complexType>
			
			<xs:complexType name="Treatment">
				<xs:annotation>
					<xs:documentation>Qualified treatment.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="treatmentId" type="xs:long"/>
					<xs:element maxOccurs="1" minOccurs="1" name="treatmentName" type="xs:string"/>
					<xs:element maxOccurs="1" minOccurs="1" name="treatmentType" type="tns:TreatmentType"/>
					<xs:element maxOccurs="1" minOccurs="1" name="treatmentQualificationMethod" type="tns:TreatmentQualificationMethod"/>
					<xs:element maxOccurs="1" minOccurs="0" name="treatmentLocation" type="xs:string"/>
					<xs:element maxOccurs="1" minOccurs="0" name="optInUrl" type="xs:string"/>
					<xs:element maxOccurs="1" minOccurs="0" name="optOutUrl" type="xs:string"/>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="factor" type="tns:Factor"/>
				</xs:sequence>
			</xs:complexType>
			
			<xs:simpleType name="TreatmentType">
				<xs:restriction base="xs:token">
					<xs:enumeration value="CONTROL"/>
					<xs:enumeration value="VARIANT"/>
				</xs:restriction>
			</xs:simpleType>
			
			<xs:simpleType name="TreatmentQualificationMethod">
				<xs:restriction base="xs:token">
					<xs:enumeration value="GUID"/>
					<xs:enumeration value="AUTH_USER_ID"/>
					<xs:enumeration value="OPT_IN"/>
				</xs:restriction>
			</xs:simpleType>			
			
			<xs:complexType name="Factor">
				<xs:annotation>
					<xs:documentation>Object to hold the Factors.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="name" type="xs:string"/>
					<xs:element maxOccurs="1" minOccurs="1" name="value" type="xs:string"/>
				</xs:sequence>
			</xs:complexType>
			
			<xs:complexType name="Fact">
				<xs:annotation>
					<xs:documentation>Object to hold the Fact.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="name" type="xs:string" minOccurs="1" maxOccurs="1"/>
					<xs:element name="value" type="xs:string" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:complexType>
			
			<xs:complexType abstract="true" name="BaseServiceRequest">
				<xs:annotation>
					<xs:documentation>
						This is the base class for request container for all service operations.
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>

				</xs:sequence>
			</xs:complexType>
			
			<xs:complexType abstract="true" name="BaseServiceResponse">
				<xs:annotation>
					<xs:documentation>
						Base response container for all service operations. Contains error information
						associated with the request.
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="ack" type="tns:AckValue">
						<xs:annotation>
							<xs:documentation>
								
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="errorMessage" type="tns:ErrorMessage">
						<xs:annotation>
							<xs:documentation>
								Information for an error or warning that occurred when eBay processed the
								request.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>

				</xs:sequence>
			</xs:complexType>
			
			
			<xs:complexType name="ErrorMessage">
				<xs:annotation>
					<xs:documentation>
						ErrorMessage to indicate any Error/Warning occured as part of service call.
						Any run time error will not be reported here, but will be reported aspart of
						soap fault.
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="error"  type="tns:ErrorData">
						<xs:annotation>
							<xs:documentation>
								Details about a single error.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			
			
			
			<xs:complexType name="ErrorData">
				<xs:annotation>
					<xs:documentation>
						This represents error details.
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="errorId" type="xs:long">
						<xs:annotation>
							<xs:documentation>
								A unique code that identifies the particular error condition that occurred.
								Your application can use error codes as identifiers in your customized
								error-handling algorithms.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="domain" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								Name of the domain upon which the error occurred. 
								&lt;dl&gt;
								&lt;lh&gt;Domains include:&lt;/lh&gt;
								&lt;dt&gt;
									Marketplace
								&lt;/dt&gt;
								&lt;dd&gt;
									A business or validation error occurred for the Merchandising Service.
								&lt;/dd&gt;
								&lt;dt&gt;
									SOA
								&lt;/dt&gt;
								&lt;dd&gt;
									An exception occurred in the Service Oriented Architecture (SOA) framework.
								&lt;/dd&gt;
								&lt;/dl&gt;
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="severity" type="tns:ErrorSeverity">
						<xs:annotation>
							<xs:documentation>
								Indicates whether the error caused the request to fail (Error) or not
								(Warning).
								&lt;br&gt;&lt;br&gt;
								If the request fails and the source of the problem is within the application
								(such as a missing required element), please change the application before you
								retry the request. If the problem is due to end-user input data, please alert
								the end-user to the problem and provide the means for them to correct the data.
								Once the problem in the application or data is resolved, you can attempt to re-
								send the request to eBay.
								&lt;br&gt;&lt;br&gt;
								If the source of the problem is on eBay's side, you can retry the request as-is
								a reasonable number of times (eBay recommends twice). If the error persists,
								contact Developer Technical Support. Once the problem has been resolved, the
								request may be resent in its original form.
								&lt;br&gt;&lt;br&gt;
								When a warning occurs, the error is returned in addition to the business data.
								In this case, you do not need to retry the request (as the original request was
								successful). However, depending on the cause or nature of the warning, you
								might need to contact either the end user or eBay to effect a long term
								solution to the problem to prevent it from reoccurring in the future.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="category" type="tns:ErrorCategory">
						<xs:annotation>
							<xs:documentation>
								There are three categories of errors: request errors, application errors, and
								system errors.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								A detailed description of the condition that resulted in the error.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="subdomain" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								Name of the subdomain upon which the error occurred. 
								&lt;dl&gt;
								&lt;lh&gt;Subdomains include:&lt;/lh&gt;
								&lt;dt&gt;
									Merchandising
								&lt;/dt&gt;
								&lt;dd&gt;
									The error is specific to the Merchandising service.
								&lt;/dd&gt;
								&lt;dt&gt;
									MarketplaceCommon
								&lt;/dt&gt;
								&lt;dd&gt;
									The error is common to all Marketplace services.
								&lt;/dd&gt;
								&lt;/dl&gt;
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exceptionId" type="xs:token">
						<xs:annotation>
							<xs:documentation>
								Unique identifier for an exception associated with an error.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="parameter"  type="tns:ErrorParameter">
						<xs:annotation>
							<xs:documentation>
								Some warning and error messages return one or more variables that contain
								contextual information about the error. This is often the field or value that
								triggered the error.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			
			
			<xs:complexType name="ErrorParameter">
				<xs:annotation>
					<xs:documentation>
						Contextual information associated with an error.
					</xs:documentation>
				</xs:annotation>
				<xs:simpleContent>
					<xs:extension base="xs:string">
						<xs:attribute name="name" type="xs:string">
							<xs:annotation>
								<xs:documentation>
									The name of the parameter in the list of parameter types returned
									within the error type.
								</xs:documentation>
									<xs:appinfo>
										<CallInfo>
											<AllCalls/>
											<Returned>Conditionally</Returned>
										</CallInfo>
									</xs:appinfo>
							</xs:annotation>
						</xs:attribute>
					</xs:extension>
				</xs:simpleContent>
			</xs:complexType>
			
			
			
			<xs:simpleType name="AckValue">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the error is a severe error (causing the request to fail)
						or an informational error (a warning) that should be communicated to the
						user.
					</xs:documentation>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Success">
						<xs:annotation>
							<xs:documentation>
								The request was processed successfully, but something occurred that may
								affect your application or the user.				
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Failure">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was not processed successfully.
								When a serious application-level error occurs, the error is returned
								instead of the business data.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Warning">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was processed successfully but with some warnings.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="PartialFailure">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was processed successfully but with some warnings.				
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
			
			<xs:simpleType name="ErrorSeverity">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the error is a severe error (causing the request to fail)
						or an informational error (a warning) that should be communicated to the
						user.
					</xs:documentation>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Error">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was not processed successfully.
								When a serious application-level error occurs, the error is returned
								instead of the business data.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Warning">
						<xs:annotation>
							<xs:documentation>
								The request was processed successfully, but something occurred that may
								affect your application or the user. For example, eBay may have changed a
								value the user sent in. In this case, eBay returns a normal, successful
								response and also returns the warning.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
			
			<xs:simpleType name="ErrorCategory">
				<xs:annotation>
					<xs:documentation>
						There are three categories of error: request errors, application errors,
						and system errors. Request and application errors are caused primarily by
						invalid data passed in the request. System errors are caused primarily by
						application failures and cannot be corrected by changing request values.
					</xs:documentation>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:enumeration value="System">
						<xs:annotation>
							<xs:documentation>
								Indicates that an error has occurred on the eBay system side, such as a
								database or server down. An application can retry the request as-is a
								reasonable number of times (eBay recommends twice). If the error
								persists, contact Developer Technical Support. Once the problem has been
								resolved, the request may be resent in its original form.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Application">
						<xs:annotation>
							<xs:documentation>
								An error occurred due to a problem with the request, such as missing or
								invalid fields. The problem must be corrected before the request can be
								made again. If the problem is due to something in the application (such
								as a missing required field), the application must be changed. Once the
								problem in the application or data is resolved, resend the corrected
								request to eBay.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Request">
						<xs:annotation>
							<xs:documentation>
								An error occurred due to a problem with the request, such as invalid or
								missing data. The problem must be corrected before the request can be
								made again. If the problem is a result of end-user data, the application
								must alert the end-user to the problem and provide the means for the
								end-user to correct the data. Once the problem in the data is resolved,
								resend the request to eBay with the corrected data.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
		</xs:schema>
	</wsdl:types>
	
	<wsdl:message name="getExperimentsResponse">
		<wsdl:part name="parameters" element="tns:getExperimentsResponse"/>
	</wsdl:message>
	<wsdl:message name="getExperimentsRequest">
		<wsdl:part name="parameters" element="tns:getExperimentsRequest"/>
	</wsdl:message>
	<wsdl:message name="recordTreatmentsServedResponse">
		<wsdl:part name="parameters" element="tns:recordTreatmentsServedResponse"/>
	</wsdl:message>
	<wsdl:message name="recordTreatmentsServedRequest">
		<wsdl:part name="parameters" element="tns:recordTreatmentsServedRequest"/>
	</wsdl:message>
	<wsdl:message name="recordFactsRequest">
		<wsdl:part name="parameters" element="tns:recordFactsRequest"/>
	</wsdl:message>
	<wsdl:message name="recordFactsResponse">
		<wsdl:part name="parameters" element="tns:recordFactsResponse"/>
	</wsdl:message>
	
	<wsdl:portType name="ExperimentationExecutionServicePort">
		<wsdl:operation name="getExperiments">
			<wsdl:documentation>
				Retrieves all the active experiments the user lies in.
			</wsdl:documentation>	
			<wsdl:input message="tns:getExperimentsRequest">
			</wsdl:input>
			<wsdl:output message="tns:getExperimentsResponse">
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="recordTreatmentsServed">
			<wsdl:documentation>
				Records the treatments served.
			</wsdl:documentation>
			<wsdl:input message="tns:recordTreatmentsServedRequest">
			</wsdl:input>
			<wsdl:output message="tns:recordTreatmentsServedResponse">
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="recordFacts">
			<wsdl:documentation>
				Records the facts.
			</wsdl:documentation>
			<wsdl:input message="tns:recordFactsRequest">
			</wsdl:input>
			<wsdl:output message="tns:recordFactsResponse">
			</wsdl:output>
		</wsdl:operation>
	</wsdl:portType>
	
	<wsdl:binding name="ExperimentationExecutionServiceSOAPBinding" type="tns:ExperimentationExecutionServicePort">
		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<wsdl:operation name="getExperiments">
			<soap:operation soapAction="http://www.ebay.com/marketplace/experimentation/v1/services/getExperiments"/>
			<wsdl:input>
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="recordTreatmentsServed">
			<soap:operation soapAction="http://www.ebay.com/marketplace/experimentation/v1/services/recordTreatmentsServed"/>
			<wsdl:input>
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="recordFacts">
			<soap:operation soapAction="http://www.ebay.com/marketplace/experimentation/v1/services/recordFacts"/>
			<wsdl:input>
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	
	<wsdl:service name="ExperimentationExecutionService">
		<wsdl:documentation>
		<Version>1.0.0</Version>
		The Experimentation Execution db now communicates with an Experimentation Execution SOA service that can be accessed by environments like eBox / eVA / eBox on Core, etc, and potentially expand services to other eBay Inc adjacencies like Stub Hub, Paypal, etc assuming those adjacencies have all the necessary infrastructure in place. 
		</wsdl:documentation>
		<wsdl:port name="ExperimentationExecutionServiceSOAP" binding="tns:ExperimentationExecutionServiceSOAPBinding">
			<soap12:address location="https://svcs.ebay.com/services/experimentation/ExperimentationExecutionService/v1"/>
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>
