<?xml version="1.0" encoding="UTF-8"?>
<definitions name="QueryService"
	targetNamespace="http://www.ebay.com/marketplace/cloud/v1/services"
	xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
	xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/"
	xmlns:tns="http://www.ebay.com/marketplace/cloud/v1/services" xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/">
	<types>
		<xs:schema attributeFormDefault="unqualified"
			elementFormDefault="qualified"
			targetNamespace="http://www.ebay.com/marketplace/cloud/v1/services">

			<xs:simpleType name="ErrorCategory">
				<xs:annotation>
					<xs:documentation>
						Documentation goes here.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:restriction base="xs:token">
					<xs:enumeration value="System" />
					<xs:enumeration value="Application" />
					<xs:enumeration value="Request" />
				</xs:restriction>
			</xs:simpleType>
			<xs:complexType name="ErrorData">
				<xs:annotation>
					<xs:documentation>
						The SOA common error data type will be used to
						manage error handling
						and reporting
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="errorId" type="xs:long" />
					<xs:element name="domain" type="xs:string" />
					<xs:element minOccurs="0" name="subdomain" type="xs:string" />
					<xs:element name="severity" type="xs:string" />
					<xs:element name="category" type="xs:string" />
					<xs:element name="message" type="xs:string" />
					<xs:element minOccurs="0" name="exceptionId" type="xs:token" />
					<xs:element maxOccurs="unbounded" minOccurs="0" name="parameter"
						type="tns:ErrorParameter" />
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ErrorMessage">
				<xs:annotation>
					<xs:documentation>
						Documentation goes here
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<!--

					processContents="lax" /> </xs:sequence>
				-->
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="error"
						type="xs:string" />
				</xs:sequence>
			</xs:complexType>

			<xs:simpleType name="ErrorSeverity">
				<xs:annotation>
					<xs:documentation>
						Documentation goes here.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:restriction base="xs:token">
					<xs:enumeration value="Error" />
					<xs:enumeration value="Warning" />
				</xs:restriction>
			</xs:simpleType>
			<xs:element name="getVersionRequest" type="tns:GetVersionRequest" />
			<xs:complexType name="GetVersionRequest">
				<xs:annotation>
					<xs:documentation>
						Service version can be obtained through this soa
						call.
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">

					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="getVersionResponse" type="tns:GetVersionResponse" />
			<xs:complexType name="GetVersionResponse">
				<xs:annotation>
					<xs:documentation>
						Service version response 
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseResponse">

					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="getMetricsRequest" type="tns:GetMetricsRequest">
				<xs:annotation>
					<xs:documentation>The request is packaged using this complex type
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:complexType name="GetMetricsRequest">
				<xs:annotation>
					<xs:documentation>
						Primary request type structure for initiating a
						service request.
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">

						<xs:sequence>

							<xs:element name="topology" type="xs:string"
								maxOccurs="1" minOccurs="1">
							</xs:element>
							<xs:element name="requestCriteria"
								type="tns:MetricsCriteria" maxOccurs="unbounded"
								minOccurs="1">
							</xs:element>
							<xs:element name="startTime"
								type="xs:dateTime" maxOccurs="1" minOccurs="1">
							</xs:element>
							<xs:element name="resolution"
								type="xs:duration" maxOccurs="1" minOccurs="1">
							</xs:element>
							<xs:element name="duration"
								type="xs:duration" maxOccurs="1" minOccurs="1">
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="getMetricsResponse" type="tns:GetMetricsResponse" />
			<xs:complexType name="GetMetricsResponse">
				<xs:annotation>
					<xs:documentation>
						The response will respect the PerfMetricsFeed data model to
						allow for a standardized data representation.
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseResponse">
						<xs:sequence>
							<xs:element maxOccurs="unbounded" minOccurs="1"
								name="metricResponse" type="tns:PerfMetricsPacket" />

						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="MetricsCriteria">
                <xs:annotation>
                	<xs:documentation>Specifies the criterias for the request. </xs:documentation>
                </xs:annotation>
                <xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="targetType"
						type="tns:TargetType">
					</xs:element>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="grouping"
						type="tns:Grouping" />
					<xs:element maxOccurs="1" minOccurs="1" name="targetInstanceName"
						type="xs:string">
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="1" name="metricName"
						type="xs:string" />
				</xs:sequence>
			</xs:complexType>

			<xs:simpleType name="TargetType">
                <xs:annotation>
                	<xs:documentation>TargetType is an enum with a pre-defined set of values.</xs:documentation></xs:annotation>
                <xs:restriction base="xs:string">


					<xs:enumeration value="Server" />
					<xs:enumeration value="ApplicationService" />
					<xs:enumeration value="ServiceInstance" />
					<xs:enumeration value="Cluster" />
					<xs:enumeration value="Group" />
					<xs:enumeration value="SearchGrid" />
					<xs:enumeration value="SearchMiniGrid" />
					<xs:enumeration value="SearchAggregator" />
					<xs:enumeration value="SearchRow" />
					<xs:enumeration value="SearchCol" />
					<xs:enumeration value="SearchQueryNode" />

				</xs:restriction>
			</xs:simpleType>
			<xs:complexType name="Grouping">
                <xs:annotation>
                	<xs:documentation>				
                			A Grouping represents the dimension or perspective in which a metric can be bucketed in.
					 		It has a type and a value to uniquely identify a grouping
					</xs:documentation>
                </xs:annotation>
                <xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="groupBy"
						type="xs:string">
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="1" name="groupValue"
						type="xs:string" />
				</xs:sequence>
			</xs:complexType>
			<xs:simpleType name="AckValue">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the error is a severe error
						(causing the request to fail)
						or an informational error (a warning)
						that should be communicated
						to the user.
			</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:restriction base="xs:string">

					<xs:enumeration value="Success">
						<xs:annotation>
							<xs:documentation>
								The request was processed successfully, but
								something occurred that
								may
								affect your application or the user.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Failure">
						<xs:annotation>

							<xs:documentation>
								The request that triggered the error was not
								processed
								successfully.
								When a serious application-level error
								occurs, the error is returned
								instead of the business data.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Warning">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was
								processed successfully but
								with some warnings.
					</xs:documentation>

						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="PartialFailure">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was
								processed successfully but
								with some warnings.				</xs:documentation>
						</xs:annotation>
					</xs:enumeration>

				</xs:restriction>
			</xs:simpleType>
			<xs:complexType abstract="true" name="BaseRequest">
				<xs:annotation>
					<xs:documentation>
						This is the base class for request container for
						all service operations.
			</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="extension"
						type="tns:ExtensionType" />
				</xs:sequence>
			</xs:complexType>
			<xs:complexType abstract="true" name="BaseResponse">
				<xs:annotation>
					<xs:documentation>
						Base response container for all service
						operations.
						Contains error information associated with the request.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>

				<xs:sequence>
					<xs:element name="ack" type="tns:AckValue">
						<xs:annotation>
							<xs:documentation>

							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls />
									<Returned>Always</Returned>

								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="errorMessage" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								Information for an error or warning that
								occurred when eBay processed the request.
					</xs:documentation>

							<xs:appinfo>
								<CallInfo>
									<AllCalls />
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>

					<xs:element minOccurs="0" name="version" type="xs:string">
						<xs:annotation>
							<xs:documentation />
							<xs:appinfo>
								<CallInfo>
									<AllCalls />
									<Returned>Always</Returned>

								</CallInfo>
							</xs:appinfo>
						</xs:annotation>

					</xs:element>
					<xs:element minOccurs="0" name="timestamp" type="xs:dateTime">
						<xs:annotation>
							<xs:documentation />

							<xs:appinfo>
								<CallInfo>
									<AllCalls />
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="extension"
						type="tns:ExtensionType" />
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ErrorParameter">
				<xs:annotation>
					<xs:documentation>Documentation goes here</xs:documentation>

					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>

				<xs:simpleContent>
					<xs:extension base="xs:string">
						<xs:attribute name="name" type="xs:string" use="optional" />
					</xs:extension>
				</xs:simpleContent>
			</xs:complexType>
			<xs:complexType name="ExtensionType">
				<xs:annotation>
					<xs:documentation>Documentation goes here</xs:documentation>

					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary"
							namespace="http://www.ebay.com/marketplace/services" />
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="id" type="xs:positiveInteger" />
					<xs:element name="version" type="xs:string" />
					<xs:element name="contentType" type="xs:string" />
					<xs:element name="value" type="xs:string" />

				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="Metric">
				<xs:annotation>
					<xs:documentation>
						Metric complexType represents the performance
						metric (or error) being measured and the statistics available for
						that metric. It may also have a unit if applicable. For
						example, responseTime is a metric (name), min, mean, max
						and stddev are the available statistics for this metric,
						and the unit is ms (milliseconds).

						The specific statistical computations done for a
						metric are decided by the implementor of the Event Processing
						Application. These are stored in the Performance model
						and may also be exposed through the Subscription
						Service.
			</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MetricsFeedTypeLibrary"
							namespace="http://www.ebay.com/marketplace/cloud/v1/services"></typeLibrarySource>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="stat"
						type="tns:Statistic"></xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="unit"
						type="xs:string"></xs:element>
					<xs:element name="name" type="xs:string"></xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="Statistic">
				<xs:annotation>
					<xs:documentation>
						Statistic complexType represents a specific statistical computation done on a metric. 
						It has a name which identifies the statistical measure and a value which
						holds the value of the measure. For example, mean(average) is a statistical
						measure.
			</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MetricsFeedTypeLibrary"
							namespace="http://www.ebay.com/marketplace/cloud/v1/services"></typeLibrarySource>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="value" type="xs:double"></xs:element>
					<xs:element name="name" type="xs:string"></xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="Group">
				<xs:annotation>
					<xs:documentation>
						A Group represents the dimension or perspective
						in which a metric can be bucketed in. It has a type and a value
						to uniquely identify a grouping. A Group can contain
						subgroups or a list of targets or subgroups and list of
						targets (much in the way a dir can contain subdirs and
						regular files). The list of targets can be
						the list of target instance objects or list of references to
						them. A reference is useful to avoid duplicate target instance
						values. This can happen, for example, in Cassini
						monitoring where a Query Node is a member of both a row
						and a column.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MetricsFeedTypeLibrary"
							namespace="http://www.ebay.com/marketplace/cloud/v1/services"></typeLibrarySource>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="groupBy" type="tns:GroupType"></xs:element>
					<xs:element name="groupValue" type="xs:string"></xs:element>
					<xs:element maxOccurs="unbounded" name="group" type="tns:Group"></xs:element>
					<xs:choice>
						<xs:element maxOccurs="unbounded" name="targetInstance"
							type="tns:TargetInstance"></xs:element>
					</xs:choice>
				</xs:sequence>
			</xs:complexType>
			<xs:simpleType name="GroupType">
				<xs:annotation>
					<xs:documentation>
						The GroupType represents a grouping dimension.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MetricsFeedTypeLibrary"
							namespace="http://www.ebay.com/marketplace/cloud/v1/services"></typeLibrarySource>
					</xs:appinfo>
				</xs:annotation>
				<xs:restriction base="xs:token">
					<xs:enumeration value="NoGrouping"></xs:enumeration>
					<xs:enumeration value="Pool"></xs:enumeration>
					<xs:enumeration value="Colo"></xs:enumeration>
					<xs:enumeration value="SearchGrid"></xs:enumeration>
					<xs:enumeration value="SearchMiniGrid"></xs:enumeration>
					<xs:enumeration value="SearchRow"></xs:enumeration>
					<xs:enumeration value="SearchCol"></xs:enumeration>
					<!-- 
			others to be added as needed 
		-->
				</xs:restriction>
			</xs:simpleType>
			<xs:simpleType name="ManagedObjectType">
				<xs:annotation>
					<xs:documentation>
						The ManagedObjectType represents the type of the
						target for which the metric is being collected and processed. This
						must match with the ODB 2.0 types or be aliased to them.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MetricsFeedTypeLibrary"
							namespace="http://www.ebay.com/marketplace/cloud/v1/services"></typeLibrarySource>
					</xs:appinfo>
				</xs:annotation>
				<xs:restriction base="xs:token">
					<xs:enumeration value="Server"></xs:enumeration>
					<xs:enumeration value="ServiceInstance"></xs:enumeration>
					<xs:enumeration value="ApplicationService"></xs:enumeration>
					<xs:enumeration value="Cluster"></xs:enumeration>
					<xs:enumeration value="Pool"></xs:enumeration>
					<xs:enumeration value="Group"></xs:enumeration>
					<xs:enumeration value="SearchGrid"></xs:enumeration>
					<xs:enumeration value="SearchMiniGrid"></xs:enumeration>
					<xs:enumeration value="SearchAggregator"></xs:enumeration>
					<xs:enumeration value="SearchRow"></xs:enumeration>
					<xs:enumeration value="SearchCol"></xs:enumeration>
					<xs:enumeration value="SearchQueryNode"></xs:enumeration>
					<!-- 
			others to be added as necessary
		-->
				</xs:restriction>
			</xs:simpleType>
			<xs:complexType name="PerfMetricsPacket">
				<xs:annotation>
					<xs:documentation>
							PerfMetricsPacket represents a snapshot (in time)
							of time-series data of performance metrics associated with 
							specific target types (such as a Search Grid, Search Row, etc.) 
							in the context of a single topology. The metrics are grouped by 
							different dimensions, and the groups can be nested.
							The performance metrics are computed over a specific time range;
		 					this is indicated by the start time and the duration of the measurement
							(and computation) interval.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MetricsFeedTypeLibrary"
							namespace="http://www.ebay.com/marketplace/cloud/v1/services"></typeLibrarySource>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="unbounded" name="target" type="tns:Target"></xs:element>
					<xs:element name="topology" type="xs:string"></xs:element>
					<xs:element name="resolution" type="xs:duration"></xs:element>
					<xs:element name="startTime" type="xs:dateTime"></xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="Target">
				<xs:annotation>
					<xs:documentation>
						This complexType identifies the target for which the metrics are being provided. The target metrics can be
						grouped, possibly in multiple groups. As an optimization, the type of the target is specified just once 
						(as opposed to inside each group).Each target instance is identified inside the group.

						Examples of type and instance include Server and myHost.colo.ebay.com, Pool and v3apilwcore, etc.

						While there can be many group types, not all target-group combinations may be valid. The valid
						combinations are decided by the implementor of the Event Processing Application.
						(TBD: These are stored in the EPA Profile in the Performance model and are exposed as
						metadata through the Subscription Service so that consumers can determine the valid and available targets
						for a particular EPA.)

						Example of a group includes Colo (type) and PHX (value).
						An example of a target type - group type combination is SearchRow and Colo. Note that the target type may also
						be a group type for a different target type. Extending the example above, SearchQueryNode is a target type and
						SearchRow is a group type.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource
							library="MetricsFeedTypeLibrary"
							namespace="http://www.ebay.com/marketplace/cloud/v1/services">
						</typeLibrarySource>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="unbounded" name="group" type="tns:Group"></xs:element>
					<xs:element name="targetType" type="tns:ManagedObjectType"></xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="TargetInstance">
				<xs:annotation>
					<xs:documentation>
						The TargetInstance complexType specifies the instance of
						the target for which the metrics are being provided and
						the metrics themselves. It also has an id attribute that
						can be used to refer to an instance of this complexType
						(to avoid duplicate values).
					</xs:documentation>
			<xs:appinfo><typeLibrarySource library="MetricsFeedTypeLibrary" namespace="http://www.ebay.com/marketplace/cloud/v1/services"></typeLibrarySource></xs:appinfo></xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="unbounded" name="metric" type="tns:Metric"></xs:element>
			<xs:element name="name" type="xs:string"></xs:element>
		</xs:sequence>
	</xs:complexType></xs:schema>
	</types>
	<message name="getMetricsRequest">
		<part name="params" element="tns:getMetricsRequest">
		</part>
	</message>
	<message name="getVersionResponse">
		<part name="params" element="tns:getVersionResponse">
		</part>
	</message>
	<message name="getVersionRequest">
		<part name="params" element="tns:getVersionRequest">
		</part>
	</message>
	<message name="getMetricsResponse">
		<part name="params" element="tns:getMetricsResponse">
		</part>
	</message>
	<portType name="QueryServicePort">
		<operation name="getVersion">
			<wsdl:documentation>
				Documentation goes here.
			</wsdl:documentation>
			<input message="tns:getVersionRequest">
			</input>
			<output message="tns:getVersionResponse">
			</output>
		</operation>
		<operation name="getMetrics">
			<wsdl:documentation>
				Primary operation to retrieve monitoring metrics from a previously
				populated data store.
			</wsdl:documentation>
			<input message="tns:getMetricsRequest">
			</input>
			<output message="tns:getMetricsResponse">
			</output>
		</operation>
	</portType>
	<binding name="QueryServiceHttpBinding" type="tns:QueryServicePort">
		<http:binding verb="POST" />
		<operation name="getVersion">
			<http:operation location="/getVersion" />
			<input>
				<mime:content type="application/xml" />
			</input>
			<output>
				<mime:content type="application/xml" />
			</output>
		</operation>
		<operation name="getMetrics">
			<http:operation location="/getMetrics" />
			<input>
				<mime:content type="application/xml" />
			</input>
			<output>
				<mime:content type="application/xml" />
			</output>
		</operation>
	</binding>
	<binding name="QueryServiceSOAPBinding" type="tns:QueryServicePort">
		<soap:binding style="document"
			transport="http://schemas.xmlsoap.org/soap/http" />
		<operation name="getVersion">
			<soap:operation
				soapAction="http://www.ebay.com/marketplace/cloud/v1/services/getVersion" />
			<input>
				<soap:body use="literal" />
			</input>
			<output>
				<soap:body use="literal" />
			</output>
		</operation>
		<operation name="getMetrics">
			<soap:operation
				soapAction="http://www.ebay.com/marketplace/cloud/v1/services/getMetrics" />
			<input>
				<soap:body use="literal" />
			</input>
			<output>
				<soap:body use="literal" />
			</output>
		</operation>
	</binding>
	<service name="QueryService">
		<wsdl:documentation>
			<version>1.0.0</version>
		</wsdl:documentation>
		<port name="QueryServiceHttpPort" binding="tns:QueryServiceHttpBinding">
			<http:address location="https://svcs.ebay.com/services/cloud/v1/QueryService" />
		</port>
		<port name="QueryServiceSOAPPort" binding="tns:QueryServiceSOAPBinding">
			<soap12:address
				location="https://svcs.ebay.com/services/cloud/v1/QueryService" />
		</port>
	</service>
</definitions>
