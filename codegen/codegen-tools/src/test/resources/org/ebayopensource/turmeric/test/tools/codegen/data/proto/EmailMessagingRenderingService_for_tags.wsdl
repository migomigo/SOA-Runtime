<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="EmailMessagingRenderingService" targetNamespace="http://www.ebay.com/marketplace/notification/v1/services" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://www.ebay.com/marketplace/notification/v1/services" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.ebay.com/marketplace/notification/v1/services" xmlns:xs="http://www.w3.org/2001/XMLSchema">








            
            <xs:element name="getVersionReq" type="ns0:GetVersionRequest"/>
            <xs:complexType name="GetVersionRequest">
                <xs:complexContent>
                    <xs:extension base="ns0:BaseRequest"/>
                </xs:complexContent>
            </xs:complexType>
            <xs:element name="getVersionResp" type="ns0:GetVersionResponse"/>
            <xs:complexType name="GetVersionResponse">
                <xs:complexContent>
                    <xs:extension base="ns0:BaseResponse"/>
                </xs:complexContent>
            </xs:complexType>
            
            <xs:complexType name="MessageTypeFormat">
                <xs:sequence>
                    <xs:element name="type" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                Type of the message. The values can be Email, MyMessage, SMS, etc.
                                This field can contain comma separated types for cases that multiple 
                                types share the same formats.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="format" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                Format of a message. The values can be Html, Text, etc. A message type
                                can have multiple formats.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>

            <xs:element name="renderReq" type="ns0:RenderRequest"/>
            <xs:complexType name="RenderRequest">
                <xs:complexContent>
                    <xs:extension base="ns0:BaseRequest">
                        <xs:sequence>
                            <xs:element name="segmentId" type="xs:int"/>
                            <xs:element name="emailId" type="xs:int"/>
                            <xs:element name="dataModelXml" type="xs:string"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            
      <xs:complexType name="EmailMessagingHeader">
          <xs:simpleContent>
                  <xs:extension base="xs:string">
                      <xs:attribute name="name" type="xs:string" use="required"/>
                  </xs:extension>
           </xs:simpleContent>
       </xs:complexType>
 
       <xs:complexType name="EmailMessagingBody">
          <xs:simpleContent>
                  <xs:extension base="xs:string">
                      <xs:attribute name="type" type="xs:string" use="required"/>
                  </xs:extension>
           </xs:simpleContent>
       </xs:complexType>
            
            <xs:complexType name="EmailMessaging">
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" minOccurs="0" name="header" type="ns0:EmailMessagingHeader"/>
                            <xs:element maxOccurs="unbounded" minOccurs="0" name="body" type="ns0:EmailMessagingBody"/>
                        </xs:sequence>
                        <xs:attribute name="messageType" type="xs:string" use="required">                           
                        </xs:attribute>
            </xs:complexType>
            <xs:element name="renderResp" type="ns0:RenderResponse"/>
            <xs:complexType name="RenderResponse">
                <xs:complexContent>
                    <xs:extension base="ns0:BaseResponse">
                        <xs:sequence>
                            <xs:element maxOccurs="unbounded" minOccurs="0" name="renderedMessage" type="ns0:EmailMessaging"/>
                            <xs:element name="segmentId" type="xs:int"/>
                            <xs:element name="emailId" type="xs:int"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            
            <xs:element name="renderAndDeliverReq" type="ns0:RenderAndDeliverRequest"/>
            <xs:complexType name="RenderAndDeliverRequest">
                <xs:complexContent>
                    <xs:extension base="ns0:BaseRequest">
                        <xs:sequence>
                            <xs:element name="segmentId" type="xs:int"/>
                            <xs:element name="emailId" type="xs:int"/>
                            <xs:element name="dataModelXml" type="xs:string"/>
                            <xs:element minOccurs="0" name="deliveryDate" type="xs:dateTime"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:element name="renderAndDeliverResp" type="ns0:RenderAndDeliverResponse"/>
            <xs:complexType name="RenderAndDeliverResponse">
                <xs:complexContent>
                    <xs:extension base="ns0:BaseResponse">
                        <xs:sequence>
                            <xs:element name="trackingId" type="xs:string"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
<xs:simpleType name="AckValue">
		<xs:annotation>
			<xs:documentation>
				Indicates whether the error is a severe error (causing the request to fail)
				or an informational error (a warning) that should be communicated to the
				user.
			</xs:documentation>
		<xs:appinfo><typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/></xs:appinfo></xs:annotation>
		<xs:restriction base="xs:string">
	
			<xs:enumeration value="Success">
				<xs:annotation>
					<xs:documentation>
						The request was processed successfully, but something occurred that may
						affect your application or the user.				
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Failure">
				<xs:annotation>
	
					<xs:documentation>
						The request that triggered the error was not processed successfully.
						When a serious application-level error occurs, the error is returned
						instead of the business data.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Warning">
				<xs:annotation>
					<xs:documentation>
						The request that triggered the error was processed successfully but with some warnings.
					</xs:documentation>
	
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PartialFailure">
				<xs:annotation>
					<xs:documentation>
						The request that triggered the error was processed successfully but with some warnings.				</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
	
		</xs:restriction>
	</xs:simpleType><xs:complexType abstract="true" name="BaseRequest">
		<xs:annotation>
			<xs:documentation>
				This is the base class for request container for all
				service operations.
			</xs:documentation>
		<xs:appinfo><typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/></xs:appinfo></xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="extension" type="ns0:ExtensionType"/>
		</xs:sequence>
	</xs:complexType><xs:complexType abstract="true" name="BaseResponse">
		<xs:annotation>
			<xs:documentation>
				Base response container for all service operations.
				Contains error information associated with the request.
			</xs:documentation>
		<xs:appinfo><typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/></xs:appinfo></xs:annotation>

		<xs:sequence>
			<xs:element name="ack" type="ns0:AckValue">
				<xs:annotation>
					<xs:documentation>

					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Always</Returned>

						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="errorMessage" type="ns0:ErrorMessage">
				<xs:annotation>
					<xs:documentation>
						Information for an error or warning that
						occurred when eBay processed the request.
					</xs:documentation>

					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>

			<xs:element minOccurs="0" name="version" type="xs:string">
				<xs:annotation>
					<xs:documentation/>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Always</Returned>

						</CallInfo>
					</xs:appinfo>
				</xs:annotation>

			</xs:element>
			<xs:element minOccurs="0" name="timestamp" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation/>

					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="extension" type="ns0:ExtensionType"/>
		</xs:sequence>
	</xs:complexType><xs:simpleType name="ErrorCategory">
		<xs:annotation>
			<xs:documentation>
				Documentation goes here.
			</xs:documentation>
		<xs:appinfo><typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/></xs:appinfo></xs:annotation>

      <xs:restriction base="xs:token">
        <xs:enumeration value="System"/>
        <xs:enumeration value="Application"/>
        <xs:enumeration value="Request"/>
      </xs:restriction>

	</xs:simpleType><xs:complexType name="ErrorData">
		<xs:annotation>
			<xs:documentation>Documentation goes here</xs:documentation>
			
		<xs:appinfo><typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/></xs:appinfo></xs:annotation>
	
	  <xs:sequence>
        	<xs:element name="errorId" type="xs:long"/>
		  	<xs:element name="domain" type="xs:string"/>
			<xs:element minOccurs="0" name="subdomain" type="xs:string"/>
			<xs:element name="severity" type="ns0:ErrorSeverity"/>
	  		<xs:element name="category" type="ns0:ErrorCategory"/>
	  		<xs:element name="message" type="xs:string"/>
	  		<xs:element minOccurs="0" name="exceptionId" type="xs:token"/>
	  		<xs:element maxOccurs="unbounded" minOccurs="0" name="parameter" type="ns0:ErrorParameter"/>
		</xs:sequence>
	
	
	</xs:complexType><xs:complexType name="ErrorMessage">
		<xs:annotation>
			<xs:documentation>Documentation goes here</xs:documentation>
			
		<xs:appinfo><typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/></xs:appinfo></xs:annotation>
		
		<!-- 
		<xs:sequence>

				processContents="lax" />
		</xs:sequence>
		-->
		
    	<xs:sequence>
    		<xs:element maxOccurs="unbounded" minOccurs="0" name="error" type="ns0:ErrorData">
    		</xs:element>
    	</xs:sequence>
		
	</xs:complexType><xs:complexType name="ErrorParameter">
		<xs:annotation>
			<xs:documentation>Documentation goes here</xs:documentation>
			
		<xs:appinfo><typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/></xs:appinfo></xs:annotation>

		<xs:simpleContent>
		  <xs:extension base="xs:string">
		    <xs:attribute name="name" type="xs:string" use="optional"/>
		  </xs:extension>
		</xs:simpleContent>
	</xs:complexType><xs:simpleType name="ErrorSeverity">
		<xs:annotation>
			<xs:documentation>
				Documentation goes here.
			</xs:documentation>
		<xs:appinfo><typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/></xs:appinfo></xs:annotation>

      <xs:restriction base="xs:token">
        <xs:enumeration value="Error"/>
        <xs:enumeration value="Warning"/>
      </xs:restriction>

	</xs:simpleType><xs:complexType name="ExtensionType">
		<xs:annotation>
			<xs:documentation>Documentation goes here</xs:documentation>
			
		<xs:appinfo><typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/></xs:appinfo></xs:annotation>
		<xs:sequence>
			<xs:element name="id" type="xs:positiveInteger"/>
			<xs:element name="version" type="xs:string"/>
			<xs:element name="contentType" type="xs:string"/>
			<xs:element name="value" type="xs:string"/>

		</xs:sequence>
	</xs:complexType></xs:schema>
  </wsdl:types>
  <wsdl:message name="getVersionResponse">
    <wsdl:part name="params" element="ns0:getVersionResp">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="renderAndDeliverResponse">
    <wsdl:part name="params" element="ns0:renderAndDeliverResp">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="renderResponse">
    <wsdl:part name="params" element="ns0:renderResp">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="renderRequest">
    <wsdl:part name="params" element="ns0:renderReq">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="renderAndDeliverRequest">
    <wsdl:part name="params" element="ns0:renderAndDeliverReq">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getVersionRequest">
    <wsdl:part name="params" element="ns0:getVersionReq">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="EmailMessagingRenderingServicePort">
    <wsdl:operation name="getVersion">
      <wsdl:input message="ns0:getVersionRequest">
    </wsdl:input>
      <wsdl:output message="ns0:getVersionResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="render">
      <wsdl:input message="ns0:renderRequest">
    </wsdl:input>
      <wsdl:output message="ns0:renderResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renderAndDeliver">
      <wsdl:input message="ns0:renderAndDeliverRequest">
    </wsdl:input>
      <wsdl:output message="ns0:renderAndDeliverResponse">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EmailMessagingRenderingServiceSOAPBinding" type="ns0:EmailMessagingRenderingServicePort">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getVersion">
      <soap12:operation soapAction="urn:getVersion" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="render">
      <soap12:operation soapAction="urn:render" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renderAndDeliver">
      <soap12:operation soapAction="urn:renderAndDeliver" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="EmailMessagingRenderingServiceHttpBinding" type="ns0:EmailMessagingRenderingServicePort">
    <http:binding verb="POST"/>
    <wsdl:operation name="getVersion">
      <http:operation location="/getVersion"/>
      <wsdl:input>
        <mime:content part="params" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="params" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="render">
      <http:operation location="/render"/>
      <wsdl:input>
        <mime:content part="params" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="params" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="renderAndDeliver">
      <http:operation location="/renderAndDeliver"/>
      <wsdl:input>
        <mime:content part="params" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="params" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EmailMessagingRenderingService">
    <wsdl:port name="EmailMessagingRenderingServiceHttpPort" binding="ns0:EmailMessagingRenderingServiceHttpBinding">
      <http:address location="https://svcs.ebay.com/services/notification/EmailMessagingRenderingService/v1"/>
    </wsdl:port>
    <wsdl:port name="EmailMessagingRenderingServiceSOAPPort" binding="ns0:EmailMessagingRenderingServiceSOAPBinding">
      <soap12:address location="https://svcs.ebay.com/services/notification/EmailMessagingRenderingService/v1"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
