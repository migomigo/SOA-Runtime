<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ns0="http://www.ebay.com/marketplace/catalog/v1/services" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://www.ebay.com/marketplace/catalog/v1/services" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="CommunityProductMediaService" targetNamespace="http://www.ebay.com/marketplace/catalog/v1/services">
	<wsdl:documentation/>
	<wsdl:types>
		<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.ebay.com/marketplace/catalog/v1/services" xmlns:tns="http://www.ebay.com/marketplace/catalog/v1/services" xmlns:xs="http://www.w3.org/2001/XMLSchema">
			<xs:element name="findProductsRequest" type="tns:FindProductsRequest"/>
			<xs:element name="findProductsResponse" type="tns:FindProductsResponse"/>
			<xs:complexType name="FindProductsRequest">
				<xs:annotation>
					<xs:documentation>
						This is the request object for FindProducts
						operation.
					</xs:documentation>
					<xs:appinfo>
						<Summary>
							FindProducts operation will find the
							products that are open for media collection
							in eBayPictures
						</Summary>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">
						<xs:sequence>
							<xs:element name="productSearch" type="tns:ProductSearch">
								<xs:annotation>
									<xs:documentation>
							This request is the container for product related information
						</xs:documentation>
									<xs:appinfo>
										<CallInfo>
											<CallName>FindProducts</CallName>
											<CallName>GetProductDetails</CallName>
											<RequiredInput/>
										</CallInfo>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="productStatusFilter" type="tns:ProductStatus">
								<xs:annotation>
									<xs:documentation>
							Specifies the status of the products to be returned. If the user wants to search for closed
							products he should set productClosed to true. Default value is false. That is the service by default
							returns open products.							
							</xs:documentation>
									<xs:appinfo>
										<CallInfo>
											<CallName>getProductDetails</CallName>
											<RequiredInput>No</RequiredInput>
										</CallInfo>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="FindProductsResponse">
				<xs:annotation>
					<xs:documentation>
						This is the response object for the findProducts call
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseResponse">
						<xs:sequence>
							<xs:element maxOccurs="unbounded" minOccurs="0" name="product" type="tns:Product">
						<xs:annotation>
							<xs:documentation>
								Container for multiple products.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>findProducts</CallName>									
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
						
						</xs:element>
						<xs:element maxOccurs="1" minOccurs="0" name="paginationOutput" type="tns:PaginationOutput">
						<xs:annotation>
							<xs:documentation>
								Indicates the pagination of the result set. Child elements indicate the
								maximum number of item listings returned per response and which page of
								data has been returned.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>findProducts</CallName>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="getProductDetailsRequest" type="tns:GetProductDetailsRequest"/>
			<xs:element name="getProductDetailsResponse" type="tns:GetProductDetailsResponse"/>
			<xs:complexType name="GetProductDetailsRequest">
				<xs:annotation>
					<xs:documentation>
						Retrieve product details for the specified product ID, including whether 
						the product has fitment information or not.
					</xs:documentation>
					<xs:appinfo>
						<Summary>
							Retrieve product details for the specified product ID, including whether 
							the product has fitment information or not. 
						</Summary>
					</xs:appinfo>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">
						<xs:sequence>
							<xs:element name="getProductDetailRequest" type="tns:GetProductDetailRequest" minOccurs="1" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>
						A request will be create for every product for which ProductDetails are required. 
					</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="GetProductDetailsResponse">
				<xs:annotation>
					<xs:documentation>
						Container for product details.
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseResponse">
						<xs:sequence>
							<xs:element maxOccurs="unbounded" minOccurs="0" name="productWithMedia" type="tns:ProductWithMedia">
								<xs:annotation>
									<xs:documentation>
										Details for a single product and its corresponding approved Media
									</xs:documentation>
									<xs:appinfo>
										<CallInfo>
											<CallName>getProductDetails</CallName>
											<Returned>Conditionally</Returned>
										</CallInfo>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="GetProductDetailRequest">
				<xs:annotation>
					<xs:documentation>
						Container for request data for retrieving product details.
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseRequest">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="productIdentifier" type="tns:ProductIdentifier">
								<xs:annotation>
									<xs:documentation>
								The product identifier type and value. The service accepts ePID and CPID .
							</xs:documentation>
									<xs:appinfo>
										<CallInfo>
											<CallName>getProductDetails</CallName>
											<RequiredInput>Yes</RequiredInput>
										</CallInfo>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>							
							
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:simpleType name="ProductStatus">
				<xs:annotation>
					<xs:documentation>
				This is used to indicate if the user is searching for open products or closed products.
				By  default open products unless this is specified.
			</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketplaceCatalogDomainTypeLibrary" namespace="http://www.ebay.com/marketplace/marketplacecatalog/v1/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Open">
						<xs:annotation>
							<xs:documentation>
								Indicates that the product is open
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Closed">
						<xs:annotation>
							<xs:documentation>
								Indicates that the product is closed
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>				
				</xs:restriction>
			</xs:simpleType>		
			
			<xs:complexType abstract="true" name="BaseRequest">
				<xs:annotation>
					<xs:documentation>
						This is the base class for request container for
						all service operations.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="extension" type="tns:ExtensionType" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ExtensionType">
			  <xs:sequence>
			 <xs:element name="id" type="xs:positiveInteger"/>
			 <xs:element name="version" type="xs:string"/>
			 <xs:element name="contentType" type="xs:string"/>
			 <xs:element name="value" type="xs:string"/>

			 </xs:sequence>
			</xs:complexType>

			<xs:complexType name="ProductSearch">
				<xs:annotation>
					<xs:documentation>
					 Container for request data used for product search and getting product details.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>findProducts</CallName>
							<CallName>getProductDetails</CallName>
							<RequiredInput>Yes</RequiredInput>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="keywords" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								This is the search string for finding products. If this is set in the request
								 the response will contain product names which are like the keyword. 
								 Keywords which has a space in between, an AND query will be performed with the separate words to fetch the results.
								 For example: "Apple IPhone" is given as the keyword the query will be generated with Fields having "APPLE" and "IPhone"
								 </xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>findProducts</CallName>
									<RequiredInput>Conditionally</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="catalogId" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								This is the catalogId which the product belongs to
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="sortOrder" type="tns:SortOrder">
						<xs:annotation>
							<xs:documentation>
								Sort Order for the result set. Any of the searchable property can be used
								to specify the sort order. If no sort order is specified then default
								sort order(popularity descending) will be applied.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>findProducts</CallName>
									<CallName>findProductsByCompatibility</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="paginationInput" type="tns:PaginationInput">
						<xs:annotation>
							<xs:documentation>
								Controls the pagination of the result set. Child elements specify the
								maximum number of products to return per call and the page of
								data to return. Controls the number of products returned in the
								response, but does not specify the amount of data to return for each
								product.								
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>findProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:simpleType name="OrderType">
				<xs:annotation>
					<xs:documentation>
						Defines the order type as Ascending or Descending
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketplaceCatalogDomainTypeLibrary" namespace="http://www.ebay.com/marketplace/marketplacecatalog/v1/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Ascending">
						<xs:annotation>
							<xs:documentation>
								The results will be sorted by the specified attribute in ascending (low 
								to high) order.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Descending">
						<xs:annotation>
							<xs:documentation>
								The results will be sorted by the specified attribute in descending (high 
								to low) order.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
			<xs:complexType name="SortOrder">
				<xs:annotation>
					<xs:documentation>
						Sort order input for the result set. Any of the
						searchable proerty can be used for property name and
						order can be either ascending or descending.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketplaceCatalogDomainTypeLibrary" namespace="http://www.ebay.com/marketplace/marketplacecatalog/v1/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="propertyName" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								This will be one of the properties returned from
								getProperties call.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>findProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="1" name="order" type="tns:OrderType">
						<xs:annotation>
							<xs:documentation>
								Order of the sort, either Ascending or
								Descending
							</xs:documentation>
							<xs:appinfo>
								<Default>Descending</Default>
								<CallInfo>
									<CallName>findProducts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>

				</xs:sequence>
			</xs:complexType>
			
					
			<xs:complexType abstract="true" name="BaseResponse">
				<xs:annotation>
					<xs:documentation>
						Base response container for all service operations. Contains error information 	associated with the request.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="ack" type="tns:AckValue">
						<xsd:annotation>
							<xs:documentation>
								Indicates whether or not errors or warnings were generated during the
								processing of the request.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xsd:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="errorMessage" type="tns:ErrorMessage">
						<xs:annotation>
							<xs:documentation>
								Information for an error or warning that occurred when eBay processed the request.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="version" type="xs:string">
						<xsd:annotation>
							<xs:documentation>
								The release version that eBay used to process the request. Developer
								Technical Support may ask you for the version value if you work with them
								to troubleshoot issues.
								The version in use is normally the latest release version, as specified
									in the release notes. 
									</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xsd:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="timestamp" type="xs:dateTime">
						<xsd:annotation>
							<xs:documentation>
								This value represents the date and time when eBay processed the request.
								This value is returned in GMT, the ISO 8601 date and time format (YYYY-
								MM- DDTHH:MM:SS.SSSZ). See the "dateTime" type for information about the
								time format, and for details on converting to and from the GMT time zone.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xsd:annotation>
					</xs:element>
					<xs:element name="extension" type="tns:ExtensionType" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:complexType>
			<xsd:simpleType name="ErrorCategory">
				<xsd:annotation>
					<xs:documentation>
						There are three categories of error: request errors, application errors,
						and system errors. Request and application errors are often caused by
						passing invalid data in the request. System errors are primarily caused by
						application failures and cannot be corrected by changing request values.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xsd:annotation>
				<xsd:restriction base="xsd:token">
					<xsd:enumeration value="System">
						<xs:annotation>
							<xs:documentation>
								Indicates that an error has occurred on the eBay system side. For
								example, a database or server could be down. Inspect the error message to
								find the cause of the problem. If the problem is on the eBay side, an
								application can retry the request as-is a reasonable number of times
								(eBay recommends twice). If the error persists, contact Developer
								Technical Support. Once the problem has been resolved, the request may be
								resent in its original form.
							</xs:documentation>
						</xs:annotation>
					</xsd:enumeration>
					<xsd:enumeration value="Application">
						<xs:annotation>
							<xs:documentation>
								An error occurred due to a problem with the request, with the most likely
								source being the application sending the request. For example, the
								request is missing a required data element or it contains an invalid
								field. The problem must be corrected before the request can be resent.
								Inspect the error message to find the cause of the problem. If the
								problem is due to an application error, modify the application and resend
								the request. If the error is due to invalid data, the source of the data
								must be corrected before you resend the resend request to eBay.
							</xs:documentation>
						</xs:annotation>
					</xsd:enumeration>
					<xsd:enumeration value="Request">
						<xs:annotation>
							<xs:documentation>
								An error occurred due to a problem with the request, with the most likely
								source being missing or invalid data in the request. The problem must be
								corrected before the request can be retried. Inspect the error message to
								find the cause of the problem. If the problem is a result of end-user
								data, alert the end-user to the problem and provide the means for them to
								correct the problem. Once the problem is resolved, resend the request to
								eBay.
							</xs:documentation>
						</xs:annotation>
					</xsd:enumeration>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:complexType name="ErrorData">
				<xsd:annotation>
					<xs:documentation>
						A container for error details.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element name="errorId" type="xsd:long">
						<xs:annotation>
							<xs:documentation>
								A unique code that identifies the particular error condition that
								occurred. Your application can use error codes as identifiers in your
								customized error-handling algorithms.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xsd:element>
					<xsd:element name="domain" type="xsd:string">
						<xs:annotation>
							<xs:documentation>
								Name of the domain in which the error occurred.								
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="subdomain" type="xsd:string">
						<xs:annotation>
							<xs:documentation>
								Name of the subdomain in which the error occurred.
								MarketplaceCatalog ->
									The error is specific to the Marketplace Catalog subdomain.
								MarketplaceCommon ->							
									The error is common to all Marketplace services.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xsd:element>
					<xsd:element name="severity" type="tns:ErrorSeverity">
						<xs:annotation>
							<xs:documentation>
								Indicates whether the reported problem is fatal (an error) or is less-
								severe (a warning). Review the error message details for information on
								the cause.
								If the request fails and the application is the source of the error (for
								example, a required element is missing), update the application before
								you retry the request. If the problem is due to incorrect user data,
								alert the end-user to the problem and provide the means for them to
								correct the data. Once the problem in the application or data is
								resolved, re-send the request to eBay.
								If the source of the problem is on eBay's side, you can retry the request
								a reasonable number of times (eBay recommends you try the request twice).
								If the error persists, contact Developer Technical Support. Once the
								problem has been resolved, you can resend the request in its original
								form.								
								If a warning occurs, warning information is returned in addition to the
								business data. Normally, you do not need to resend the request (as the
								original request was successful). However, depending on the cause of the
								warning, you might need to contact the end user, or eBay, to effect a
								long term solution to the problem.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xsd:element>
					<xsd:element name="category" type="tns:ErrorCategory">
						<xs:annotation>
							<xs:documentation>
								There are three categories of errors: request errors, application 
								errors, and system errors.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xsd:element>
					<xsd:element name="message" type="xsd:string">
						<xs:annotation>
							<xs:documentation>
								A detailed description of the condition that caused in the error.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="exceptionId" type="xsd:token">
						<xs:annotation>
							<xs:documentation>
								Unique identifier for an exception associated with an error.
							</xs:documentation>
							<xs:appinfo>								
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xsd:element>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="parameter" type="tns:ErrorParameter">
						<xs:annotation>
							<xs:documentation>
								Various warning and error messages return one or more variables that 
								contain contextual information about the error. This is often the 
								field or value that triggered the error.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="ErrorMessage">
				<xsd:annotation>
					<xs:documentation>
						Information regarding an error or warning that occurred when eBay processed
						the request. Not returned when the ack value is Success. Run-time errors are
						not reported here, but are instead reported as part of a SOAP fault.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="error" type="tns:ErrorData">
						<xs:annotation>
							<xs:documentation>
								Details about a single error.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xs:complexType name="ErrorParameter">
				<xs:annotation>
					<xs:documentation>
						The name of the input parameter returned with the error.
									Inspecting the parameter (or its input value) will often aid in
									understanding the cause of the error. Not all error messages
									contain this value.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:simpleContent>
					<xs:extension base="xs:string">
						<xs:attribute name="name" type="xs:string" use="optional"/>
					</xs:extension>
				</xs:simpleContent>
			</xs:complexType>
			<xs:simpleType name="ErrorSeverity">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the error is a fatal error (causing the request to fail)
						or a less severe error (a warning) that should be communicated to the user.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="SOACommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:restriction base="xs:token">
					<xsd:enumeration value="Error">
						<xs:annotation>
							<xs:documentation>
								eBay encountered a fatal error during the processing of the request,
								causing the request to fail. When eBay encounters an error, it returns
								error data instead of the requested business data. Inspect the error
								details and resolve the problem before resubmitting the request.
							</xs:documentation>
						</xs:annotation>
					</xsd:enumeration>
					<xsd:enumeration value="Warning">
						<xs:annotation>
							<xs:documentation>
								The request was successfully processed, but eBay encountered a non-fatal
								error during the processing that could affect the data returned. For
								example, eBay might have changed the value of an input field. In this
								case, eBay returns a successful response, but it also returns a warning.
								For best results, requests should return without warnings. Inspect the
								warning details and resolve the problem before resubmitting the request.
							</xs:documentation>
						</xs:annotation>
					</xsd:enumeration>
				</xs:restriction>
			</xs:simpleType>
			<xsd:complexType name="PaginationInput">
				<xsd:annotation>
					<xs:documentation>
						Controls the pagination of the result set. Child elements specify the maximum
						number of item listings to return per call and which page of data to return.
						Controls which listings are returned in the response, but does not control
						the details associated with the returned items.
					</xs:documentation>
					<xsd:appinfo>
						<xsd:typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xsd:appinfo>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element minOccurs="0" name="pageNumber" type="xsd:int">
						<xs:annotation>
							<xs:documentation>
								Specifies which subset of data (or "page") to return in the call
								response. The number of data pages is determined by the total number of
								items matching the request search criteria (returned in
								paginationOutput.totalEntries) divided by the number of entries to
								display in each response (entriesPerPage). You can return up to the first
								100 pages of the result set by issuing multiple requests and specifying, 
								in sequence, the pages to return.
							</xs:documentation>
							<xs:appinfo>
								<Default>1</Default>
								<CallInfo>
									<AllCalls/>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="entriesPerPage" type="xsd:int">
						<xs:annotation>
							<xs:documentation>
								Specifies the maximum number of entries to return in a single call. If
								the number of entries found on the specified pageNumber is less than the
								value specified here, the number of items returned will be less than the
								value of entriesPerPage. This indicates the end of the result set.
								If entriesPerPage is set to a number greater than 25, the default value,
								25, will be used.
							</xs:documentation>
							<xs:appinfo>
								<Default>25</Default>
								<CallInfo>
									<AllCalls/>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xsd:element>
					<xsd:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:complexType name="PaginationOutput">
				<xsd:annotation>
					<xs:documentation>
						Shows the pagination data for the item search. Child elements include the
						page number returned, the maximum entries returned per page, the total number
						of pages that can be returned, and the total number of items that match the 
						search criteria.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xsd:annotation>
				<xsd:sequence>
					<xsd:element minOccurs="0" name="totalPages" type="xsd:int">
						<xs:annotation>
							<xs:documentation>
								The total number of pages of data that could be returned by repeated
								search requests. Note that if you modify the value of
								inputPagination.entriesPerPage in a request, the value output for
								totalPages will change. A value of "0" is returned if eBay does not find
								any items that match the search criteria.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="totalEntries" type="xsd:int">
						<xs:annotation>
							<xs:documentation>
								The total number of items found that match the search criteria in your
								request. Depending on the input value for entriesPerPage, the response
								might include only a portion (a page) of the entire result set. A value
								of "0" is returned if eBay does not find any items that match the search
								criteria.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="pageNumber" type="xsd:int">
						<xs:annotation>
							<xs:documentation>
								The subset of item data returned in the current response. Search results
								are divided into sets, or "pages," of item data. The number of pages is
								equal to the total number of items matching the search criteria divided
								by the value specified for entriesPerPage in the request. The response
								for a request contains one "page" of item data.
								This returned value indicates the page number of item data returned (a
								subset of the complete result set). If this field contains 1, the
								response contains the first page of item data (the default). If the value
								returned in totalEntries is less than the value for entriesPerPage,
								pageNumber returns 1 and the response contains the entire result set.
								The value of pageNumber is normally equal to the value input for
								paginationInput.pageNumber. However, if the number input for pageNumber
								is greater than the total possible pages of output, eBay returns the last
								page of item data in the result set, and the value for pageNumber is set
								to the respective (last) page number.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xsd:element>
					<xsd:element minOccurs="0" name="entriesPerPage" type="xsd:int">
						<xs:annotation>
							<xs:documentation>
								The maximum number of items that can be returned in the response. This
								number is always equal to the value input for
								paginationInput.entriesPerPage.
								The end of the result set has been reached if the number specified for
								entriesPerPage is greater than the number of items found on the specified
								pageNumber. In this case, there will be fewer items returned than the
								number specified in entriesPerPage. This can be determined by comparing
								the entriesPerPage value with the value returned in the count attribute
								for the searchResult field.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xsd:element>
					<xsd:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
				</xsd:sequence>
			</xsd:complexType>
			<xs:simpleType name="AckValue">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the error is a severe error(causing the request to fail) or an	informational error (a warning) that should becommunicated to the user.
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketPlaceServiceCommonTypeLibrary" namespace="http://www.ebay.com/marketplace/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Success">
						<xs:annotation>
							<xs:documentation>
								The request was processed successfully,but something occurred that may affect your application or the user.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Failure">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was 	not processed successfully. When a serious application-level error occurs,the error is returned instead of the
								business data.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Warning">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was 	processed successfully but with some warnings.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
			<xs:complexType name="Product">
				<xs:annotation>
					<xs:documentation>
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName/>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="productIdentifier" type="tns:ProductIdentifier" minOccurs="1" maxOccurs="1"/>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="productDetails" type="ns0:PropertyValue">
						<xs:annotation>
							<xs:documentation>
							Any details of the product that are returned by the service like IncentiveAmount
						</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="ProductWithMedia">
				<xs:annotation>
					<xs:documentation>
						Container for request data for retrieving product details.
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:Product">
						<xs:sequence>
							<xs:element name="media" maxOccurs="unbounded" minOccurs="0" type="tns:Media">
								<xs:annotation>
									<xs:documentation>
							   Container for multiple media object.
							</xs:documentation>
									<xs:appinfo>
										<CallInfo>
											<CallName>GetProductDetails</CallName>
											<Returned>Conditionally</Returned>
										</CallInfo>
									</xs:appinfo>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="ProductIdentifier">
				<xs:annotation>
					<xs:documentation>
				Type could be ePID, CPID 
			</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketplaceCatalogDomainTypeLibrary" namespace="http://www.ebay.com/marketplace/marketplacecatalog/v1/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="ePID" type="xs:string">
						<xs:annotation>
							<xs:documentation>
						eBay Product Reference Id
					</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="CPID" type="xs:string">
						<xs:annotation>
							<xs:documentation>
						Core Product Reference Id
					</xs:documentation>
						</xs:annotation>
					</xs:element>


				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="PropertyValue">
				<xs:annotation>
					<xs:documentation>
						This additional information about the product such as Incentive amount.	 
					</xs:documentation>
					<xs:appinfo>
						<typeLibrarySource library="MarketplaceCatalogDomainTypeLibrary" namespace="http://www.ebay.com/marketplace/marketplacecatalog/v1/services"/>
					</xs:appinfo>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="propertyName" type="xs:string">
			</xs:element>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="value" type="xs:string">
			</xs:element>

				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="Media">
				<xs:annotation>
					<xs:documentation>	
					This defines the attributes of the Media 
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="mediaId" type="xs:string">
						<xs:annotation>
							<xs:documentation>
							The unique representation for each media
						</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>		
			
		</xs:schema>
	</wsdl:types>
	<wsdl:message name="findProductsRequest">
		<part name="params" element="tns:findProductsRequest">
    </part>
	</wsdl:message>
	<wsdl:message name="findProductsResponse">
		<part name="params" element="tns:findProductsResponse">
    </part>
	</wsdl:message>
	<wsdl:message name="getProductDetailsRequest">
		<wsdl:part name="params" element="ns0:getProductDetailsRequest">
			</wsdl:part>
	</wsdl:message>
	<wsdl:message name="getProductDetailsResponse">
		<wsdl:part name="params" element="ns0:getProductDetailsResponse">
			</wsdl:part>
	</wsdl:message>
	<wsdl:portType name="CommunityProductMediaServicePort">
		<operation name="findProducts">
			<wsdl:documentation>
			This operation is used to get find the list of Products that are open/closed for media collection
		</wsdl:documentation>
			<input name="findProductsRequest" message="ns0:findProductsRequest"/>
			<output name="findProductsResponse" message="ns0:findProductsResponse"/>
		</operation>
		<wsdl:operation name="getProductDetails">
			<wsdl:documentation>
			This operation is used to get the details of a particular product
		</wsdl:documentation>
			<input name="getProductDetailsRequest" message="ns0:getProductDetailsRequest"/>
			<output name="getProductDetailsResponse" message="ns0:getProductDetailsResponse"/>
		</wsdl:operation>
	</wsdl:portType>
	<binding name="CommunityProductMediaServiceSOAPBinding" type="tns:CommunityProductMediaServicePort">
		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<operation name="findProducts">
			<soap:operation soapAction="urn:findProducts"/>
			<wsdl:input>
				<soap12:body use="literal"/>
			</wsdl:input>
			<output>
				<soap12:body use="literal"/>
			</output>
		</operation>
		<operation name="getProductDetails">
			<soap12:operation soapAction="urn:getProductDetails" style="document"/>
			<wsdl:input>
				<soap12:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal"/>
			</wsdl:output>
		</operation>
	</binding>
	<binding name="CommunityProductMediaServiceHttpBinding" type="tns:CommunityProductMediaServicePort">
		<http:binding verb="POST"/>
		<wsdl:operation name="findProducts">
			<wsdl:documentation>
			The eBay pictures initiative aims at collecting Media for cataloged products.This service operation 
			enables the calling application to find the products for which  media collection is open.			
			</wsdl:documentation>
			<http:operation location="findProducts"/>
			<wsdl:input>
				<mime:content part="findProducts" type="application/x-www-form-urlencoded"/>
				<mime:content part="getProductDetails" type="application/x-www-form-urlencoded"/>
			</wsdl:input>
			<wsdl:output>
				<mime:content part="findProducts" type="text/xml"/>
				<mime:content part="getProductDetails" type="text/xml"/>
			</wsdl:output>
		</wsdl:operation>
	</binding>
	<service name="CommunityProductMediaService">
		<wsdl:documentation>
		This service enables the calling application to get the list of Products for which media collection is open
		and also details of the Products.
		<Version>1.0.0</Version>		  
		</wsdl:documentation>
		
		<port name="CommunityProductMediaServiceHttpPort" binding="tns:CommunityProductMediaServiceHttpBinding">
			<http:address location="http://svcs.ebay.com/services/catalog/v1/CommunityProductMediaService"/>
		</port>
		<port name="CommunityProductMediaServiceSOAPPort" binding="tns:CommunityProductMediaServiceSOAPBinding">
			<soap12:address location="http://svcs.ebay.com/services/catalog/v1/CommunityProductMediaService"/>
		</port>
	</service>
</wsdl:definitions>
