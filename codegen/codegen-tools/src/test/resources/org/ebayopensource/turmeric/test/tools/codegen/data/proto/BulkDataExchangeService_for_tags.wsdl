<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="BulkDataExchangeService" targetNamespace="http://www.ebay.com/marketplace/services" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns0="http://www.ebay.com/marketplace/services" xmlns:tns="http://www.ebay.com/marketplace/services" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.ebay.com/marketplace/services" xmlns:tns="http://www.ebay.com/marketplace/services" xmlns:xs="http://www.w3.org/2001/XMLSchema">


<xs:element name="createUploadJobRequest"  type="tns:CreateUploadJobRequest"/>
<xs:element name="createUploadJobResponse"  type="tns:CreateUploadJobResponse"/>

<xs:element name="startUploadJobRequest"  type="tns:StartUploadJobRequest"/>
<xs:element name="startUploadJobResponse"  type="tns:StartUploadJobResponse"/>

<xs:element name="abortJobRequest"  type="tns:AbortJobRequest"/>
<xs:element name="abortJobResponse"  type="tns:AbortJobResponse"/>

<xs:element name="getJobsRequest"  type="tns:GetJobsRequest"/>
<xs:element name="getJobsResponse"  type="tns:GetJobsResponse"/>

<xs:element name="getJobStatusRequest"  type="tns:GetJobStatusRequest"/>
<xs:element name="getJobStatusResponse"  type="tns:GetJobStatusResponse"/>

<xs:element name="startDownloadJobRequest"  type="tns:StartDownloadJobRequest"/>
<xs:element name="startDownloadJobResponse"  type="tns:StartDownloadJobResponse"/>

<xs:element name="createRecurringJobRequest"  type="tns:CreateRecurringJobRequest"/>
<xs:element name="createRecurringJobResponse"  type="tns:CreateRecurringJobResponse"/>

<xs:element name="deleteRecurringJobRequest"  type="tns:DeleteRecurringJobRequest"/>
<xs:element name="deleteRecurringJobResponse"  type="tns:DeleteRecurringJobResponse"/>

<xs:element name="getRecurringJobsRequest"  type="tns:GetRecurringJobsRequest"/>
<xs:element name="getRecurringJobsResponse"  type="tns:GetRecurringJobsResponse"/>

<xs:element name="getRecurringJobExecutionStatusRequest"  type="tns:GetRecurringJobExecutionStatusRequest"/>
<xs:element name="getRecurringJobExecutionStatusResponse"  type="tns:GetRecurringJobExecutionStatusResponse"/>

<xs:element name="getRecurringJobExecutionHistoryRequest"  type="tns:GetRecurringJobExecutionHistoryRequest"/>
<xs:element name="getRecurringJobExecutionHistoryResponse"  type="tns:GetRecurringJobExecutionHistoryResponse"/>

<xs:element name="activateRecurringJobRequest"  type="tns:ActivateRecurringJobRequest"/>
<xs:element name="activateRecurringJobResponse"  type="tns:ActivateRecurringJobResponse"/>

<xs:element name="suspendRecurringJobRequest"  type="tns:SuspendRecurringJobRequest"/>
<xs:element name="suspendRecurringJobResponse"  type="tns:SuspendRecurringJobResponse"/>

<xs:element name="abortRecurringJobExecutionRequest"  type="tns:AbortRecurringJobExecutionRequest"/>
<xs:element name="abortRecurringJobExecutionResponse"  type="tns:AbortRecurringJobExecutionResponse"/>

<xs:complexType name="CreateUploadJobRequest">
	<xs:annotation>
		<xs:documentation>
		Creates a Bulk Data Exchange Job and assigns it a job id and a file reference id. You need to add
		these ids to all Bulk Data Exchange calls that are related to your job, such as getJobStatusRequest.
		You will also need to add this information to File Transfer Service requests
		for this job.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Creates a Bulk Data Exchange Job and assigns it a job id and a file reference id.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
		<xs:complexContent>
		<xs:extension base="tns:BaseServiceRequest">
			<xs:sequence>
				<xs:element name="uploadJobType" type="xs:token">
					<xs:annotation>
						<xs:documentation>
						   Specifies the Merchant Data API call used in a Bulk Data Exchange upload job.
						   Each Bulk Data Exchange job can only have one jobType per job. For instance,
						   if you are uploading a data file it can not have AddFixedPriceItem calls
						   and ReviseFixedPriceItem calls within the same upload file.

						   &lt;br&gt;&lt;br&gt;
						   &lt;dl&gt;
						   &lt;lh&gt;Applicable values:&lt;br&gt;&lt;/lh&gt;

						   &lt;dt&gt;AddFixedPriceItem&lt;/dt&gt;
						   &lt;dd&gt;Defines a single new fixed price item and lists it on a
						   specified eBay site.
						   To list multiple new items, execute AddFixedPriceItemRequestType
						   once for each item, with a new item definition each time.
						   &lt;/dd&gt;

						   &lt;dt&gt;ReviseFixedPriceItem&lt;/dt&gt;
						   &lt;dd&gt;Enables a seller to change the properties of a currently
						   active listing.
						   Include the item ID of the ended item being re-listed and any
						   properties that are being changed for the revision.
						   &lt;/dd&gt;

						   &lt;dt&gt;RelistFixedPriceItem&lt;/dt&gt;
						   &lt;dd&gt;Enables a seller to take a single item (or a single multi-item
						   listing) that ended without bidders or buyers and re-list it on a
						   specified eBay site. The listing may be re-listed with the same item
						   properties as the original or the seller may change a number of the
						   item's defining properties at re-listing time. The new listing will
						   have a different item ID than the original one. RelistItem re-lists a
						   single item (or a single multi-item listing) that has already ended.
						   To re-list multiple items (multiple listings) that have ended,
						   execute RelistFixedPriceItem once for each ended listing.
						   &lt;/dd&gt;

						   &lt;dt&gt;EndFixedPriceItem&lt;/dt&gt;
						   &lt;dd&gt;Ends the specified item listing before the date and time at which
						   it would normally end (per the listing duration).
						   &lt;/dd&gt;

						   &lt;dt&gt;SetShipmentTrackingInfo&lt;/dt&gt;
						   &lt;dd&gt;Includes information about a specific item and the shipping information
						   associated with it.
						   &lt;/dd&gt;

						   &lt;dt&gt;OrderAck&lt;/dt&gt;
						   &lt;dd&gt;Request that acknowledges that an order has been received. Use the OrderAck
						   job to acknowledge each line item in a SoldReport by order or line item. After you
						   send the first OrderAck call, future SoldReports will only contain unacknowledged
						   orders or line items.
						   &lt;/dd&gt;

						   &lt;dt&gt;ReviseInventoryStatus&lt;/dt&gt;
						   &lt;dd&gt;Enables a seller to change the price and quantity of a currently active
						   fixed-price listing.
			 			   Inputs are the item IDs and SKUs of the listings being revised, and price and
			 			   quantity that are being changed for each revision. Only applicable to fixed-price
			 			   listings that include a SKU.
						   &lt;/dd&gt;

						   &lt;/dl&gt;

						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>createUploadJob</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="UUID" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						  A Universally Unique Identifier (UUID) provided by the seller's application.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>createUploadJob</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element minOccurs="0" name="fileType" type="tns:FileType">
					<xs:annotation>
						<xs:documentation>
							Specifies the upload job type. Only XML is currently allowed.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>createUploadJob</CallName>
								<RequiredInput>No</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
		</xs:complexContent>
</xs:complexType>

<xs:complexType name="StartUploadJobRequest">
	<xs:annotation>
		<xs:documentation>
		Begins processing the data in the uploaded file. For example, if the data
		file contains data for the AddFixedPriceItem call, the Bulk Data Exchange web service
		reads and sends this item data from the uploaded file to the eBay Trading platform.
		(Adds Fixed Price Items to the eBay web site.)
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Begins processing the data in the uploaded file.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
		<xs:complexContent>
		<xs:extension base="tns:BaseServiceRequest">
			<xs:sequence>
				<xs:element name="jobId" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						Job Id assigned by the Bulk Data Exchange service
						when createUploadJobRequest is called. Use this jobId
						with any Bulk Data Exchange call, or pass this
						jobId into a File Transfer service uploadJobRequest.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>startUploadJob</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
		</xs:complexContent>
</xs:complexType>

<xs:complexType name="AbortJobRequest">
	<xs:annotation>
		<xs:documentation>
		Stops (aborts) processing the uploaded file or processing the report file
		(to be downloaded). When your application makes this call, the
		processing will stop, but it may not stop immediately. (Much like when you
		abort a job from your printer queue.)
		&lt;br&gt;
		&lt;br&gt;
		To determine which data was processed (added to the eBay web site or report)
		and which data still needs to be added, see the AbortJobResponse that is
		returned by this call.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Stops (aborts) processing the uploaded file.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
		<xs:complexContent>
		<xs:extension base="tns:BaseServiceRequest">
			<xs:sequence>
				<xs:element name="jobId" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						  Job Id assigned by the Bulk Data Exchange service
						  when createUploadJobRequest or startDownloadJob is
						  called. Use this jobId with any Bulk Data Exchange call,
						  or pass this jobId into a File Transfer service
						  uploadJobRequest or downloadJobRequest call.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>abortJob</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
		</xs:complexContent>
</xs:complexType>

<xs:complexType name="GetJobsRequest">
	<xs:annotation>
		<xs:documentation>
		Lists all jobs that have been submitted with this Seller ID
		(using the seller's credentials).
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Lists all jobs for this Seller ID.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
		<xs:complexContent>
		<xs:extension base="tns:BaseServiceRequest">
			<xs:sequence>
				<xs:element minOccurs="0" name="creationTimeFrom" type="xs:dateTime">
					<xs:annotation>
						<xs:documentation>
						Job filter criteria. By default, 30 days worth of data is returned.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>getJobs</CallName>
								<RequiredInput>No</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element minOccurs="0" name="creationTimeTo" type="xs:dateTime">
					<xs:annotation>
						<xs:documentation>
						Job filter criteria. Defaults to current time.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>getJobs</CallName>
								<RequiredInput>No</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element maxOccurs="unbounded" minOccurs="0" name="jobType" type="xs:token">
					<xs:annotation>
						<xs:documentation>
						Job filter criteria. Default is return all job types.

						&lt;br&gt;&lt;br&gt;
						&lt;dl&gt;
						&lt;lh&gt;Applicable values:&lt;br&gt;&lt;/lh&gt;

						&lt;dt&gt;AddFixedPriceItem&lt;/dt&gt;
						&lt;dd&gt;Defines a single new fixed price item and lists it on a
						specified eBay site.
						To list multiple new items, execute AddFixedPriceItemRequestType
						once for each item, with a new item definition each time.
						&lt;/dd&gt;

						&lt;dt&gt;ReviseFixedPriceItem&lt;/dt&gt;
						&lt;dd&gt;Enables a seller to change the properties of a currently active listing.
						Include the item ID of the ended item being re-listed and any properties that are
						being changed for the revision.
						&lt;/dd&gt;

						&lt;dt&gt;RelistFixedPriceItem&lt;/dt&gt;
						&lt;dd&gt;Enables a seller to take a single item (or a single multi-item
						listing) that ended without bidders or buyers and re-list it on a
						specified eBay site. The listing may be re-listed with the same item
						properties as the original or the seller may change a number of the
						item's defining properties at re-listing time. The new listing will
						have a different item ID than the original one. RelistItem re-lists a
						single item (or a single multi-item listing) that has already ended.
						To re-list multiple items (multiple listings) that have ended,
						execute RelistFixedPriceItem once for each ended listing.
						&lt;/dd&gt;

						&lt;dt&gt;EndFixedPriceItem&lt;/dt&gt;
						&lt;dd&gt;Ends the specified item listing before the date and time at which
						it would normally end (per the listing duration).
						&lt;/dd&gt;

						&lt;dt&gt;SetShipmentTrackingInfo&lt;/dt&gt;
						&lt;dd&gt;Includes information about a specific item and the shipping information
						associated with it.
						&lt;/dd&gt;

						&lt;dt&gt;OrderAck&lt;/dt&gt;
						&lt;dd&gt;Request that acknowledges that an order has been received. Use the OrderAck
						job to acknowledge each line item in a SoldReport by order or line item. After you
						send the first OrderAck call, future SoldReports will only contain unacknowledged
						orders or line items.
						&lt;/dd&gt;

						&lt;dt&gt;ReviseInventoryStatus&lt;/dt&gt;
						&lt;dd&gt;Enables a seller to change the price and quantity of a currently active
						fixed-price listing.
						Inputs are the item IDs and SKUs of the listings being revised, and price and
						quantity that are being changed for each revision. Only applicable to fixed-price
						listings that include a SKU.

						&lt;dt&gt;SoldReport&lt;/dt&gt;
						&lt;dd&gt;Lists all items that have been sold by this seller (sold items that
						were submitted to the Large Merchant Service by the seller's application). Sellers
						use this information to make inventory updates and start order fulfillment.
						&lt;br&gt;&lt;br&gt;
						After you upload an OrderAck job for orders or line items within the order, they will no
						longer appear in the SoldReport. (After you send the first OrderAck call, future
				                SoldReports will only contain unacknowledged orders or line items.)
					        &lt;/dd&gt;

						&lt;dt&gt;ActiveInventoryReport&lt;/dt&gt;
						&lt;dd&gt;A report that contains all of the active listings for a specific seller ID.
						The eBay servers read the credential information passed in by the seller's application
						to determine which seller's data to retrieve.
						&lt;/dd&gt;

						&lt;dl&gt;

						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>getJobs</CallName>
								<RequiredInput>No</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element maxOccurs="unbounded" minOccurs="0" name="jobStatus" type="tns:JobStatus">
					<xs:annotation>
						<xs:documentation>
						    Returns the current state of a Bulk Data Exchange Job. Use getJobStatus to find
						    out where your job is in the processing cycle. Default is to return status for all jobs.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>getJobs</CallName>
								<RequiredInput>No</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="GetJobStatusRequest">
	<xs:annotation>
		<xs:documentation>
		Get job status for the provided job ID.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Get job status for the provided job ID..
			</Summary>
		</xs:appinfo>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="tns:BaseServiceRequest">
			<xs:sequence>
				<xs:element name="jobId" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						Job Id assigned by the Bulk Data Exchange service
						when createUploadJobRequest or startDownloadJob is
						called. Use this jobId with any Bulk Data Exchange call,
						or pass this jobId into a File Transfer service
						uploadJobRequest or downloadJobRequest call.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>getJobStatus</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="StartDownloadJobRequest">
	<xs:annotation>
		<xs:documentation>
		Begins processing the data for a report file to download. The Bulk Data Exchange web service
		notifies the seller application when the report data is available for download.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Begins processing the data for a report file to download.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
		<xs:complexContent>
		<xs:extension base="tns:BaseServiceRequest">
			<xs:sequence>
				<xs:element name="downloadJobType" type="xs:token">
					<xs:annotation>
						<xs:documentation>
						Specifies the Merchant Data API call used in a Bulk Data Exchange download job.
						Each Bulk Data Exchange job can only have one jobType per job. For instance,
						if you are downloading a file with SoldReport data, it can not have
						ActiveInventoryReport data within the same file.

						&lt;br&gt;&lt;br&gt;
						&lt;dl&gt;
						&lt;lh&gt;Applicable values:&lt;br&gt;&lt;/lh&gt;

						&lt;dt&gt;SoldReport&lt;/dt&gt;
						&lt;dd&gt;Lists all items that have been sold by this seller (sold items that
						were submitted to the Large Merchant Service by the seller's application). Sellers
						use this information to make inventory updates and start order fulfillment.
						&lt;br&gt;&lt;br&gt;
						After you upload an OrderAck job for orders or line items within the order, they will no
						longer appear in the SoldReport. (After you send the first OrderAck call, future
				                SoldReports will only contain unacknowledged orders or line items.)
					        &lt;/dd&gt;

						&lt;dt&gt;ActiveInventoryReport&lt;/dt&gt;
						&lt;dd&gt;A report that contains all of the active listings for a specific seller ID.
						The eBay servers read the credential information passed in by the seller's application
						to determine which seller's data to retrieve.
						&lt;/dd&gt;

						&lt;dl&gt;

						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>startDownloadJob</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="UUID" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						A Universally Unique Identifier (UUID) provided by the seller's application.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>startDownloadJob</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element minOccurs="0" name="downloadRequestFilter" type="tns:DownloadRequestFilter">
					<xs:annotation>
						<xs:documentation>
						Request filter.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>startDownloadJob</CallName>
								<RequiredInput>No</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="DownloadRequestFilter">
	<xs:annotation>
		<xs:documentation>
		Download request filter.
		</xs:documentation>
	</xs:annotation>
	<xs:sequence>
		<xs:element minOccurs="0" name="feeSettlementReportFilter" type="tns:FeeSettlementReportFilter">
			<xs:annotation>
				<xs:documentation>
				Invoice download request filter
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>startDownloadJob</CallName>
						<RequiredInput>No</RequiredInput>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>

	</xs:sequence>
</xs:complexType>

<xs:complexType name="FeeSettlementReportFilter">
	<xs:annotation>
		<xs:documentation>
		Fee settlement report request filter.
		</xs:documentation>
	</xs:annotation>
		<xs:sequence>
		<xs:element name="startTime" type="xs:dateTime">
			<xs:annotation>
				<xs:documentation>
				The date and time that the job was started.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>startDownloadJob</CallName>
						<RequiredInput>Yes</RequiredInput>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>

	</xs:sequence>
</xs:complexType>

<xs:complexType name="CreateRecurringJobRequest">
	<xs:annotation>
		<xs:documentation>
		Not applicable at this time. This call is reserved for future use.
		Creates a recurring Bulk Data Exchange Job and assigns it a recurringJobId. Once a recurring job has been created, a separate
		job id is created for each job that is created/executed.
		For example, if a job runs every hour, it will have a recurring job id and each hourly job will have a jobId and file
		reference id.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Reserved for future use. Creates a recurring Bulk Data Exchange Job.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
		<xs:complexContent>
		<xs:extension base="tns:BaseServiceRequest">
			<xs:sequence>
				<xs:element name="UUID" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						A Universally Unique Identifier (UUID) provided by the seller's application.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>createRecurringJob</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="frequencyInMinutes" type="xs:int">
					<xs:annotation>
						<xs:documentation>
						Job recurrence interval.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>createRecurringJob</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="downloadJobType" type="xs:token">
					<xs:annotation>
						<xs:documentation>
						Specifies the Merchant Data API call used in a Bulk Data Exchange download job.
						Each Bulk Data Exchange job can only have one jobType per job. For instance,
						if you are downloading a file with SoldReport data, it can not have
						ActiveInventoryReport data within the same file.

						&lt;br&gt;&lt;br&gt;
						&lt;dl&gt;
						&lt;lh&gt;Applicable values:&lt;br&gt;&lt;/lh&gt;

						&lt;dt&gt;SoldReport&lt;/dt&gt;
						&lt;dd&gt;Lists all items that have been sold by this seller (sold items that
						were submitted to the Large Merchant Service by the seller's application). Sellers
						use this information to make inventory updates and start order fulfillment.
						&lt;br&gt;&lt;br&gt;
						After you upload an OrderAck job for orders or line items within the order, they will no
						longer appear in the SoldReport. (After you send the first OrderAck call, future
				                SoldReports will only contain unacknowledged orders or line items.)
					        &lt;/dd&gt;

						&lt;dt&gt;ActiveInventoryReport&lt;/dt&gt;
						&lt;dd&gt;A report that contains all of the active listings for a specific seller ID.
						The eBay servers read the credential information passed in by the seller's application
						to determine which seller's data to retrieve.
						&lt;/dd&gt;

						&lt;dl&gt;

						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>createRecurringJob</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>

			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="DeleteRecurringJobRequest">
	<xs:annotation>
		<xs:documentation>
		Not applicable at this time. This call is reserved for future use.
		Deletes the recurring job.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Reserved for future use. Deletes recurring job.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
		<xs:complexContent>
		<xs:extension base="tns:BaseServiceRequest">
			<xs:sequence>
				<xs:element name="recurringJobId" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						Recurring job Id, returned by call to CreateRecurrringJob operation
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>deleteRecurringJob</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="GetRecurringJobsRequest">
	<xs:annotation>
		<xs:documentation>
		Not applicable at this time. This call is reserved for future use.
		Get all recurring jobs submitted by this seller.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Reserved for future use. Get all recurring jobs submitted by this seller.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
		<xs:complexContent>
		<xs:extension base="tns:BaseServiceRequest">
			<xs:sequence>
			</xs:sequence>
		</xs:extension>
		</xs:complexContent>
</xs:complexType>
<xs:complexType name="GetRecurringJobExecutionStatusRequest">
	<xs:annotation>
		<xs:documentation>
		Not applicable at this time. This call is reserved for future use.
		Get recurring job execution status.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Reserved for future use. Check recurring job execution status.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
		<xs:complexContent>
		<xs:extension base="tns:BaseServiceRequest">
			<xs:sequence>
				<xs:element name="recurringJobId" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						Not applicable at this time. This call is reserved for future use.
						Recurring job Id, returned by call to CreateRecurrringJob operation
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>getRecurringJobExecutionStatus</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="GetRecurringJobExecutionHistoryRequest">
	<xs:annotation>
		<xs:documentation>
		Not applicable at this time. This call is reserved for future use.
		Get recurring job execution history.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Reserved for future use. Get recurring job execution history.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
		<xs:complexContent>
		<xs:extension base="tns:BaseServiceRequest">
			<xs:sequence>
				<xs:element minOccurs="0" name="startTime" type="xs:dateTime">
					<xs:annotation>
						<xs:documentation>
						Filter on job start time. Default is 30 days.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>getRecurringJobExecutionHistory</CallName>
								<RequiredInput>No</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element minOccurs="0" name="endTime" type="xs:dateTime">
					<xs:annotation>
						<xs:documentation>
						Filter on job start time. Default is current time.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>getRecurringJobExecutionHistory</CallName>
								<RequiredInput>No</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="recurringJobId" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						Recurring job Id, returned by call to CreateRecurrringJob operation.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>getRecurringJobExecutionHistory</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element maxOccurs="unbounded" minOccurs="0" name="jobStatus" type="tns:JobStatus">
					<xs:annotation>
						<xs:documentation>
						   Returns the current state of a Bulk Data Exchange Job. Use getJobStatus to find
						   out where your job is in the processing cycle. Default is to return status for all jobs.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>getRecurringJobExecutionHistory</CallName>
								<RequiredInput>No</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="ActivateRecurringJobRequest">
	<xs:annotation>
		<xs:documentation>
		Not applicable at this time. This call is reserved for future use.
		Re-starts recurring job that has been suspended.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Reserved for future use. Activates recurring job.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
		<xs:complexContent>
		<xs:extension base="tns:BaseServiceRequest">
			<xs:sequence>
				<xs:element name="recurringJobId" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						Recurring job Id, returned by call to CreateRecurrringJob operation
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>activateRecurringJob</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="SuspendRecurringJobRequest">
	<xs:annotation>
		<xs:documentation>
		Not applicable at this time. This call is reserved for future use.
		Stops processing of recurring job. When your application makes this call, the
		processing will stop, but it may not stop immediately. To determine which data
		was processed and which data still needs to be processed, see the
		SuspendRecurringJobResponse that is returned by this call.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Reserved for future use. Suspend recurring job.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
		<xs:complexContent>
		<xs:extension base="tns:BaseServiceRequest">
			<xs:sequence>
				<xs:element name="recurringJobId" type="xs:string">
					<xs:annotation>
						<xs:documentation>
							Recurring job Id, returned by call to CreateRecurrringJob operation
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>suspendRecurringJob</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
		</xs:complexContent>
</xs:complexType>

<xs:complexType name="AbortRecurringJobExecutionRequest">
	<xs:annotation>
		<xs:documentation>
		Not applicable at this time. This call is reserved for future use.
		Abort recurring job execution. When your application makes this call, the
		job execution will stop, but it may not stop immediately. To determine which data
		was processed and which data still needs to be processed, see the
		AbortRecurringJobExecutionResponse that is returned by this call.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Reserved for future use. Abort recurring job execution.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
		<xs:complexContent>
		<xs:extension base="tns:BaseServiceRequest">
			<xs:sequence>
				<xs:element name="recurringJobId" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						Recurring job Id, returned by call to CreateRecurrringJob operation
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>abortRecurringJobExecution</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType abstract="true" name="BaseServiceRequest">
	<xs:annotation>
		<xs:documentation>
		This is the base class for request container for all service operations.
		</xs:documentation>
	</xs:annotation>
	<xs:sequence>

	</xs:sequence>
</xs:complexType>

<xs:complexType abstract="true" name="BaseServiceResponse">
	<xs:annotation>
		<xs:documentation>
			Base response container for all service operations. Contains error information
			associated with the request.
		</xs:documentation>
	</xs:annotation>
	<xs:sequence>
		<xs:element name="ack" type="tns:AckValue">
			<xs:annotation>
				<xs:documentation>
				   Returns the acknowledgement of the call success or failure.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<AllCalls/>
						<Returned>Always</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element minOccurs="0" name="errorMessage" type="tns:ErrorMessage">
			<xs:annotation>
				<xs:documentation>
					Information for an error or warning that occurred when eBay processed the
					request.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<AllCalls/>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element name="version" type="xs:string" minOccurs="0">
			<xs:annotation>
				<xs:documentation>
				  The version of the schema that your WSDL is based on.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<AllCalls/>
						<Returned>Always</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element name="timestamp" type="xs:dateTime" minOccurs="0">
			<xs:annotation>
				<xs:documentation>
				  The data and time of the response.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<AllCalls/>
						<Returned>Always</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>

	</xs:sequence>
</xs:complexType>

<xs:complexType name="CreateUploadJobResponse">
	<xs:annotation>
		<xs:documentation>
		Returns job id and a file reference id, as well as the maximum upload file size for
		your data file. You need to add these ids to all Bulk Data Exchange calls that
		are related to your job, such as getJobStatusRequest.
		&lt;br&gt;
		&lt;br&gt;
		You will also need to add this information to File Transfer service requests
		for this job.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Returns job id, file reference id, and maximum upload file size as a
			response to createUploadJobRequest.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="tns:BaseServiceResponse">
			<xs:sequence>
				<xs:element minOccurs="0" name="jobId" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						Job Id assigned by the Bulk Data Exchange service
						when createUploadJobRequest is called. Use this
						jobId with any Bulk Data Exchange call, or pass
						this jobId into a File Transfer service
						uploadJobRequest call.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>createUploadJob</CallName>
								<Returned>Always</Returned>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element minOccurs="0" name="fileReferenceId" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						   A unique Id assigned to a file by the Bulk Data Exchange service
						   when createUploadJobRequest or startDownloadJob is
						   called. Use the fileReferenceId with any Bulk Data Exchange
						   upload or download call, or pass this fileReferenceId into a
				                   File Transfer service uploadJobRequest or downloadJobRequest call.
						   or downloaded.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>createUploadJob</CallName>
								<Returned>Always</Returned>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element minOccurs="0" name="maxFileSize" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						Maximum size of a file that may be uploaded or downloaded. Currently, the default maximum size is 15MB.
						The number of calls allowed in a data file that you want to uplaod varies with the size of the
						Item description, the type of data in the description, and the complexity of each call in your file.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>createUploadJob</CallName>
								<Returned>Always</Returned>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="StartUploadJobResponse">
	<xs:annotation>
		<xs:documentation>
		Reports successful or unsuccessful ability to process the data in the uploaded file.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Reports successful or unsuccessful ability to process the data in the uploaded file.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="tns:BaseServiceResponse">
			<xs:sequence>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="AbortJobResponse">
	<xs:annotation>
		<xs:documentation>
		Reports job aborted. To determine which data was processed and which data still
		needs to be processed, see the AbortJobResponse that is returned by this call.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Reports job aborted.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="tns:BaseServiceResponse">
			<xs:sequence>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="GetJobsResponse">
	<xs:annotation>
		<xs:documentation>
		Returns the list of jobs requested by this seller.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Returns the list of jobs submitted by this seller.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="tns:BaseServiceResponse">
			<xs:sequence>
				<xs:element maxOccurs="unbounded" minOccurs="0" name="jobProfile" type="tns:JobProfile">
					<xs:annotation>
						<xs:documentation>
						  The job profile is a collection of data about a job that includes:
						  jobId, jobType, jobStatus, job creation time, job completion time,
						  errorCount, percentComplete, and fileReferenceId.
						  &lt;br&gt;&lt;br&gt;
						  The job profile returns data about the state of the Bulk Data Exchange job,
						  but does not return information about the status of the processing for any
						  data file that is sent with the job request or returned with the job response.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>getJobs</CallName>
								<Returned>Always</Returned>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="GetJobStatusResponse">
	<xs:annotation>
		<xs:documentation>
		Returns the status of all jobs submitted by this seller.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Returns the status of all jobs submitted by this seller.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="tns:BaseServiceResponse">
			<xs:sequence>
				<xs:element minOccurs="0"  maxOccurs="unbounded" name="jobProfile" type="tns:JobProfile">
					<xs:annotation>
						<xs:documentation>
						  The job profile is a collection of data about a job that includes:
						  jobId, jobType, jobStatus, job creation time, job completion time,
						  errorCount, percentComplete, and fileReferenceId.
						  &lt;br&gt;&lt;br&gt;
						  The job profile returns data about the state of the Bulk Data Exchange job,
						  but does not return information about the status of the processing for any
						  data file that is sent with the job request or returned with the job response.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>getJobStatus</CallName>
								<Returned>Always</Returned>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="StartDownloadJobResponse">
	<xs:annotation>
		<xs:documentation>
		   Indicates that a report or response is being processed by the eBay servers.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			Indicates that a report or response is being processed.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="tns:BaseServiceResponse">
			<xs:sequence>
				<xs:element minOccurs="0" name="jobId" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						Job Id assigned by the Bulk Data Exchange service
						when startDownloadJobRequest is called. Use this jobId
						with any Bulk Data Exchange call, or pass this
						jobId into a File Transfer service downloadJobRequest
						call.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>startDownloadJob</CallName>
								<Returned>Always</Returned>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="CreateRecurringJobResponse">
	<xs:annotation>
		<xs:documentation>
		  Create recurring job response.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			  Reserved for future use. Create recurring job response.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="tns:BaseServiceResponse">
			<xs:sequence>
				<xs:element minOccurs="0" name="recurringJobId" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						Recurring Job Id obtained by calling createRecurringJobRequest.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>createRecurringJob</CallName>
								<Returned>Always</Returned>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="DeleteRecurringJobResponse">
	<xs:annotation>
		<xs:documentation>
		  Delete recurring job response.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			  Delete recurring job response.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="tns:BaseServiceResponse">
			<xs:sequence>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="GetRecurringJobsResponse">
	<xs:annotation>
		<xs:documentation>
		  Get recurring jobs response.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			  Get recurring jobs response.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="tns:BaseServiceResponse">
			<xs:sequence>
				<xs:element maxOccurs="unbounded" minOccurs="0" name="recurringJobDetail" type="tns:RecurringJobDetail">
					<xs:annotation>
						<xs:documentation>
						  Recurring Job Detail.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>getRecurringJobs</CallName>
								<Returned>Always</Returned>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="GetRecurringJobExecutionStatusResponse">
	<xs:annotation>
		<xs:documentation>
		  Check Recurring Job Execution Status Response.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
			  Check Recurring Job Execution Status Response.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="tns:BaseServiceResponse">
			<xs:sequence>
				<xs:element minOccurs="0" name="jobProfile" type="tns:JobProfile">
					<xs:annotation>
						<xs:documentation>
						  The job profile is a collection of data about a job that includes:
						  jobId, jobType, jobStatus, job creation time, job completion time,
						  errorCount, percentComplete, and fileReferenceId.
						  &lt;br&gt;&lt;br&gt;
						  The job profile returns data about the state of the Bulk Data Exchange job,
						  but does not return information about the status of the processing for any
						  data file that is sent with the job request or returned with the job response.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>getRecurringJobExecutionStatus</CallName>
								<Returned>Always</Returned>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="GetRecurringJobExecutionHistoryResponse">
	<xs:annotation>
		<xs:documentation>
			Get Recurring Job execution History Response.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
				Get Recurring Job execution History Response.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="tns:BaseServiceResponse">
			<xs:sequence>
				<xs:element maxOccurs="unbounded" minOccurs="0" name="jobProfile" type="tns:JobProfile">
					<xs:annotation>
						<xs:documentation>
						  The job profile is a collection of data about a job that includes:
						  jobId, jobType, jobStatus, job creation time, job completion time,
						  errorCount, percentComplete, and fileReferenceId.
						  &lt;br&gt;&lt;br&gt;
						  The job profile returns data about the state of the Bulk Data Exchange job,
						  but does not return information about the status of the processing for any
						  data file that is sent with the job request or returned with the job response.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>getRecurringJobExecutionHistory</CallName>
								<Returned>Always</Returned>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="ActivateRecurringJobResponse">
	<xs:annotation>
		<xs:documentation>
			Activate Recurring Job Response.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
				Activate Recurring Job Response.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="tns:BaseServiceResponse">
			<xs:sequence>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="SuspendRecurringJobResponse">
	<xs:annotation>
		<xs:documentation>
			Suspend Recurring Job Response.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
				Suspend Recurring Job Response.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="tns:BaseServiceResponse">
			<xs:sequence>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="AbortRecurringJobExecutionResponse">
	<xs:annotation>
		<xs:documentation>
			Abort Recurring Job execution Response.
		</xs:documentation>
		<xs:appinfo>
			<Summary>
				Abort Recurring Job execution Response.
			</Summary>
		</xs:appinfo>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="tns:BaseServiceResponse">
			<xs:sequence>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="RecurringJobDetail">
	<xs:annotation>
		<xs:documentation>
			Recurring Job Detail for response.
		</xs:documentation>
	</xs:annotation>
		<xs:sequence>
			<xs:element name="recurringJobId" type="xs:string">
				<xs:annotation>
					<xs:documentation>
					Recurring job Id, returned by call to createRecurrringJobRequest.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>getRecurringJobs</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="creationTime" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>
					  The date and time a Bulk Data Exchange job was created.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>getRecurringJobs</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="frequencyInMinutes" type="xs:int">
				<xs:annotation>
					<xs:documentation>
					Job recurrence interval.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>getRecurringJobs</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="downloadJobType" type="xs:token">
				<xs:annotation>
					<xs:documentation>
					Specifies the Merchant Data API call used in a Bulk Data Exchange download job.
					Each Bulk Data Exchange job can only have one jobType per job. For instance,
					if you are downloading a file with SoldReport data, it can not have
					ActiveInventoryReport data within the same file.

					&lt;br&gt;&lt;br&gt;
					&lt;dl&gt;
					&lt;lh&gt;Applicable values:&lt;br&gt;&lt;/lh&gt;

					&lt;dt&gt;SoldReport&lt;/dt&gt;
					&lt;dd&gt;Lists all items that have been sold by this seller (sold items that
					were submitted to the Large Merchant Service by the seller's application). Sellers
					use this information to make inventory updates and start order fulfillment.
					&lt;br&gt;&lt;br&gt;
					After you upload an OrderAck job for orders or line items within the order, they will no
					longer appear in the SoldReport. (After you send the first OrderAck call, future
				        SoldReports will only contain unacknowledged orders or line items.)
					&lt;/dd&gt;

					&lt;dt&gt;ActiveInventoryReport&lt;/dt&gt;
					&lt;dd&gt;A report that contains all of the active listings for a specific seller ID.
					The eBay servers read the credential information passed in by the seller's application
					to determine which seller's data to retrieve.
					&lt;/dd&gt;

					&lt;dl&gt;

					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>getRecurringJobs</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="jobStatus" type="tns:RecurringJobStatus">
				<xs:annotation>
					<xs:documentation>
					   Returns the current state of a recurring Bulk Data Exchange Job. Use getJobStatus to find
					   out where your job is in the processing cycle. Default is to return status for all jobs.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>getRecurringJobs</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>

		</xs:sequence>
</xs:complexType>

<xs:simpleType name="FileType">
	<xs:annotation>
		<xs:documentation>
		Type of file to be uploaded or downloaded.
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:string">
		<xs:enumeration value="XML">
			<xs:annotation>
				<xs:documentation>
				XML file.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
	</xs:restriction>
</xs:simpleType>

<xs:complexType name="JobProfile">
	<xs:annotation>
		<xs:documentation>
		  The job profile is a collection of data about a job that includes:
		  jobId, jobType, jobStatus, job creation time, job completion time,
		  errorCount, percentComplete, and fileReferenceId.
		  &lt;br&gt;&lt;br&gt;
		  The job profile returns data about the state of the Bulk Data Exchange job,
		  but does not return information about the status of the processing for any
		  data file that is sent with the job request or returned with the job response.
		</xs:documentation>
	</xs:annotation>
		<xs:sequence>
		<xs:element name="jobId" type="xs:string">
			<xs:annotation>
				<xs:documentation>
				Job Id obtained by calling createUploadJob.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>getJobs</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getJobStatus</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getRecurringJobExecutionStatus</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getRecurringJobExecutionHistory</CallName>
						<Returned>Always</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element name="jobType" type="xs:token">
			<xs:annotation>
				<xs:documentation>
				Specifies the Merchant Data API call used in a Bulk Data Exchange service job.
				Each Bulk Data Exchange job can only have one jobType per job. For instance,
				if you are uploading a data file it can not have an AddFixedPriceItem calls
				and ReviseFixedPriceItem calls within the same file.

				&lt;br&gt;&lt;br&gt;
				&lt;dl&gt;
				&lt;lh&gt;Applicable values:&lt;br&gt;&lt;/lh&gt;

				&lt;dt&gt;AddFixedPriceItem&lt;/dt&gt;
				&lt;dd&gt;Defines a single new fixed price item and lists it on a
				specified eBay site.
				To list multiple new items, execute AddFixedPriceItemRequestType
				once for each item, with a new item definition each time.
				&lt;/dd&gt;

				&lt;dt&gt;ReviseFixedPriceItem&lt;/dt&gt;
				&lt;dd&gt;Enables a seller to change the properties of a currently active listing.
				Include the item ID of the ended item being re-listed and any properties that are
				being changed for the revision.
				&lt;/dd&gt;

				&lt;dt&gt;RelistFixedPriceItem&lt;/dt&gt;
				&lt;dd&gt;Enables a seller to take a single item (or a single multi-item
				listing) that ended without bidders or buyers and re-list it on a
				specified eBay site. The listing may be re-listed with the same item
				properties as the original or the seller may change a number of the
				item's defining properties at re-listing time. The new listing will
				have a different item ID than the original one. RelistItem re-lists a
				single item (or a single multi-item listing) that has already ended.
				To re-list multiple items (multiple listings) that have ended,
				execute RelistFixedPriceItem once for each ended listing.
				&lt;/dd&gt;

				&lt;dt&gt;EndFixedPriceItem&lt;/dt&gt;
				&lt;dd&gt;Ends the specified item listing before the date and time at which
				it would normally end (per the listing duration).
				&lt;/dd&gt;

				&lt;dt&gt;SetShipmentTrackingInfo&lt;/dt&gt;
				&lt;dd&gt;Includes information about a specific item and the shipping information
				associated with it.
				&lt;/dd&gt;

				&lt;dt&gt;OrderAck&lt;/dt&gt;
				&lt;dd&gt;Request that acknowledges that an order has been received. Use the OrderAck
				job to acknowledge each line item in a SoldReport by order or line item. After you
				send the first OrderAck call, future SoldReports will only contain unacknowledged
				orders or line items.
				&lt;/dd&gt;

				&lt;dt&gt;ReviseInventoryStatus&lt;/dt&gt;
				&lt;dd&gt;Enables a seller to change the price and quantity of a currently active
				fixed-price listing.
				Inputs are the item IDs and SKUs of the listings being revised, and price and
				quantity that are being changed for each revision. Only applicable to fixed-price
				listings that include a SKU.

				&lt;dt&gt;SoldReport&lt;/dt&gt;
				&lt;dd&gt;Lists all items that have been sold by this seller (sold items that
				were submitted to the Large Merchant Service by the seller's application). Sellers
				use this information to make inventory updates and start order fulfillment.
				&lt;br&gt;&lt;br&gt;
				After you upload an OrderAck job for orders or line items within the order, they will no
				longer appear in the SoldReport. (After you send the first OrderAck call, future
				SoldReports will only contain unacknowledged orders or line items.)
				&lt;/dd&gt;

				&lt;dt&gt;ActiveInventoryReport&lt;/dt&gt;
				&lt;dd&gt;A report that contains all of the active listings for a specific seller ID.
				The eBay servers read the credential information passed in by the seller's application
				to determine which seller's data to retrieve.
				&lt;/dd&gt;

				&lt;/dl&gt;

				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>getJobs</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getJobStatus</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getRecurringJobExecutionStatus</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getRecurringJobExecutionHistory</CallName>
						<Returned>Always</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element name="jobStatus" type="tns:JobStatus">
			<xs:annotation>
				<xs:documentation>
				   Returns the current state of a Bulk Data Exchange Job. Use getJobStatus to find
				   out where your job is in the processing cycle. Default is to return status for all jobs.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>getJobs</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getJobStatus</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getRecurringJobExecutionStatus</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getRecurringJobExecutionHistory</CallName>
						<Returned>Always</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element name="creationTime" type="xs:dateTime">
			<xs:annotation>
				<xs:documentation>
				   The date and time a Bulk Data Exchange job was created.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>getJobs</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getJobStatus</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getRecurringJobExecutionStatus</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getRecurringJobExecutionHistory</CallName>
						<Returned>Always</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element minOccurs="0" name="completionTime" type="xs:dateTime">
			<xs:annotation>
				<xs:documentation>
				The date and time that job processing was completed. Use this with creationTime
				to determine average processing time for your jobs.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>getJobs</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getJobStatus</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getRecurringJobExecutionStatus</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getRecurringJobExecutionHistory</CallName>
						<Returned>Always</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element minOccurs="0" name="errorCount" type="xs:int">
			<xs:annotation>
				<xs:documentation>
				   The number of non-fatal (informational) errors that occurred during file processing (uploads or
				   reports) after you sent the Bulk Data Exchange startUploadJobRequest call or
				   the startDownloadJobRequest call.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>getJobs</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getJobStatus</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getRecurringJobExecutionStatus</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getRecurringJobExecutionHistory</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element minOccurs="0" name="percentComplete" type="xs:double">
			<xs:annotation>
				<xs:documentation>
				The percentage of your file that has been processed after sending the
				Bulk Data Exchange startUploadJobRequest call or the startDownloadJobRequest call.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>getJobs</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getJobStatus</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getRecurringJobExecutionStatus</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getRecurringJobExecutionHistory</CallName>
						<Returned>Always</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element minOccurs="0" name="fileReferenceId" type="xs:string">
			<xs:annotation>
				<xs:documentation>
				A unique Id assigned to a file by the Bulk Data Exchange service
				when createUploadJobRequest or startDownloadJob is
				called. Use the fileReferenceId with any Bulk Data Exchange
				upload or download call, or pass this fileReferenceId into a
				File Transfer service uploadJobRequest or downloadJobRequest call.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>getJobs</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getJobStatus</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getRecurringJobExecutionStatus</CallName>
						<Returned>Always</Returned>
					</CallInfo>
					<CallInfo>
						<CallName>getRecurringJobExecutionHistory</CallName>
						<Returned>Always</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>

		</xs:sequence>
</xs:complexType>

<xs:simpleType name="AckValue">
	<xs:annotation>
		<xs:documentation>
		Indicates whether the error is a severe error (causing the request to fail)
		or an informational error (a warning) that should be communicated to the
		user.
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:string">
		<xs:enumeration value="Success">
			<xs:annotation>
				<xs:documentation>
				The request was processed successfully, but something occurred that may
				affect your application or the user.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="Failure">
			<xs:annotation>
				<xs:documentation>
				The request that triggered the error was not processed successfully.
				When a serious application-level error occurs, the error is returned
				instead of the business data.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="Warning">
			<xs:annotation>
				<xs:documentation>
				The request that triggered the error was processed successfully but with some warnings.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="PartialFailure">
			<xs:annotation>
				<xs:documentation>
				The request that triggered the error was processed successfully but with some warnings.				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
	</xs:restriction>
</xs:simpleType>

<xs:complexType name="ErrorMessage">
	<xs:annotation>
		<xs:documentation>
		ErrorMessage to indicate any Error/Warning occured as part of service call.
		Any run time error will not be reported here, but will be reported aspart of
		soap fault.
		</xs:documentation>
	</xs:annotation>
	<xs:sequence>
		<xs:element maxOccurs="unbounded" minOccurs="0" name="error"  type="tns:ErrorData">
			<xs:annotation>
				<xs:documentation>
				Details about a single error.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<AllCalls/>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
	</xs:sequence>
</xs:complexType>


<xs:complexType name="ErrorData">
	<xs:annotation>
		<xs:documentation>
		This represents error details.
		</xs:documentation>
	</xs:annotation>
	<xs:sequence>
		<xs:element name="errorId" type="xs:long">
			<xs:annotation>
				<xs:documentation>
				A unique code that identifies the particular error condition that occurred.
				Your application can use error codes as identifiers in your customized
				error-handling algorithms.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<AllCalls/>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element name="domain" type="xs:string">
			<xs:annotation>
				<xs:documentation>
					Name of the domain upon which the error occurred.
					&lt;dl&gt;
					&lt;lh&gt;Domains include:&lt;/lh&gt;
					&lt;dt&gt;
						Marketplace
					&lt;/dt&gt;
					&lt;dd&gt;
						A business or validation error occurred for the Bulk Data Exchange service.
					&lt;/dd&gt;
					&lt;dt&gt;
						SOA
					&lt;/dt&gt;
					&lt;dd&gt;
						An exception occurred in the Service Oriented Architecture (SOA) framework.
					&lt;/dd&gt;
					&lt;/dl&gt;
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<AllCalls/>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element name="severity" type="tns:ErrorSeverity">
			<xs:annotation>
				<xs:documentation>
					Indicates whether the error caused the request to fail (Error) or not
					(Warning).
					&lt;br&gt;&lt;br&gt;
					If the request fails and the source of the problem is within the application
					(such as a missing required element), please change the application before you
					retry the request. If the problem is due to end-user input data, please alert
					the end-user to the problem and provide the means for them to correct the data.
					Once the problem in the application or data is resolved, you can attempt to re-
					send the request to eBay.
					&lt;br&gt;&lt;br&gt;
					If the source of the problem is on eBay's side, you can retry the request as-is
					a reasonable number of times (eBay recommends twice). If the error persists,
					contact Developer Technical Support. Once the problem has been resolved, the
					request may be resent in its original form.
					&lt;br&gt;&lt;br&gt;
					When a warning occurs, the error is returned in addition to the business data.
					In this case, you do not need to retry the request (as the original request was
					successful). However, depending on the cause or nature of the warning, you
					might need to contact either the end user or eBay to effect a long term
					solution to the problem to prevent it from reoccurring in the future.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<AllCalls/>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element name="category" type="tns:ErrorCategory">
			<xs:annotation>
				<xs:documentation>
				There are three categories of errors: request errors, application errors, and
				system errors.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<AllCalls/>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element name="message" type="xs:string">
			<xs:annotation>
				<xs:documentation>
				A detailed description of the condition that resulted in the error.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<AllCalls/>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element minOccurs="0" name="subdomain" type="xs:string">
			<xs:annotation>
				<xs:documentation>
					Name of the subdomain upon which the error occurred.
					&lt;dl&gt;
					&lt;lh&gt;Subdomains include:&lt;/lh&gt;
					&lt;dt&gt;
						BulkDataExchangeService
					&lt;/dt&gt;
					&lt;dd&gt;
						The error is specific to the BulkDataExchangeService service.
					&lt;/dd&gt;
					&lt;dt&gt;
						MarketplaceCommon
					&lt;/dt&gt;
					&lt;dd&gt;
						The error is common to all Marketplace services.
					&lt;/dd&gt;
					&lt;/dl&gt;
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<AllCalls/>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element minOccurs="0" name="exceptionId" type="xs:token">
			<xs:annotation>
				<xs:documentation>
				   Unique identifier for an exception associated with an error.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<AllCalls/>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
		<xs:element maxOccurs="unbounded" minOccurs="0" name="parameter"  type="tns:ErrorParameter">
			<xs:annotation>
				<xs:documentation>
				Some warning and error messages return one or more variables that contain
				contextual information about the error. This is often the field or value that
				triggered the error.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<AllCalls/>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		</xs:element>
	</xs:sequence>
</xs:complexType>


<xs:complexType name="ErrorParameter">
	<xs:annotation>
		<xs:documentation>
		Contextual information associated with an error.
		</xs:documentation>
	</xs:annotation>
	<xs:simpleContent>
		<xs:extension base="xs:string">
			<xs:attribute name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation>
					The name of the parameter in the get of parameter types returned
					within the error type.
					</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<AllCalls/>
								<Returned>Conditionally</Returned>
							</CallInfo>
						</xs:appinfo>
				</xs:annotation>
			</xs:attribute>
		</xs:extension>
	</xs:simpleContent>
</xs:complexType>


<xs:simpleType name="ErrorSeverity">
	<xs:annotation>
		<xs:documentation>
		Indicates whether the error is a severe error (causing the request to fail)
		or an informational error (a warning) that should be communicated to the
		user.
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:string">
		<xs:enumeration value="Error">
			<xs:annotation>
				<xs:documentation>
				The request that triggered the error was not processed successfully.
				When a serious application-level error occurs, the error is returned
				instead of the business data.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="Warning">
			<xs:annotation>
				<xs:documentation>
				The request was processed successfully, but something occurred that may
				affect your application or the user. For example, eBay may have changed a
				value the user sent in. In this case, eBay returns a normal, successful
				response and also returns the warning.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
	</xs:restriction>
</xs:simpleType>


<xs:simpleType name="ErrorCategory">
	<xs:annotation>
		<xs:documentation>
		There are three categories of error: request errors, application errors,
		and system errors. Request and application errors are caused primarily by
		invalid data passed in the request. System errors are caused primarily by
		application failures and cannot be corrected by changing request values.
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:string">
		<xs:enumeration value="System">
			<xs:annotation>
				<xs:documentation>
				Indicates that an error has occurred on the eBay system side, such as a
				database or server down. An application can retry the request as-is a
				reasonable number of times (eBay recommends twice). If the error
				persists, contact Developer Technical Support. Once the problem has been
				resolved, the request may be resent in its original form.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="Application">
			<xs:annotation>
				<xs:documentation>
				An error occurred due to a problem with the request, such as missing or
				invalid fields. The problem must be corrected before the request can be
				made again. If the problem is due to something in the application (such
				as a missing required field), the application must be changed. Once the
				problem in the application or data is resolved, resend the corrected
				request to eBay.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="Request">
			<xs:annotation>
				<xs:documentation>
				An error occurred due to a problem with the request, such as invalid or
				missing data. The problem must be corrected before the request can be
				made again. If the problem is a result of end-user data, the application
				must alert the end-user to the problem and provide the means for the
				end-user to correct the data. Once the problem in the data is resolved,
				resend the request to eBay with the corrected data.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
	</xs:restriction>
</xs:simpleType>

<xs:simpleType name="JobStatus">
	<xs:annotation>
		<xs:documentation>
		   Returns the current state of a Bulk Data Exchange Job. Use getJobStatus to find
		   out where your job is in the processing cycle. Default is to return status for all jobs.
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:string">
		<xs:enumeration value="Created">
			<xs:annotation>
				<xs:documentation>
				The job id and reference id have been created as a result of the createUploadJobRequest
				or the startDownloadJobRequest.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="Scheduled">
			<xs:annotation>
				<xs:documentation>
				The job has been internally scheduled for processing by the Bulk Data
				Exchange service.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="InProcess">
			<xs:annotation>
				<xs:documentation>
				Processing on the data file or the report has begun.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="Completed">
			<xs:annotation>
				<xs:documentation>
				Processing on the data file or the report has finished.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="Aborted">
			<xs:annotation>
				<xs:documentation>
				The Bulk Data Exchange has been aborted due to the abortJobRequset
				call.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="Failed">
			<xs:annotation>
				<xs:documentation>
				The Bulk Data Exchange job has not completed successfully, due to
				incorrect data format, request errors, or Bulk Data Exchange
				service errors.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
	</xs:restriction>
</xs:simpleType>

<xs:simpleType name="RecurringJobStatus">
	<xs:annotation>
		<xs:documentation>
		   Returns the current state of a recurring Bulk Data Exchange Job.
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:string">
		<xs:enumeration value="Active">
			<xs:annotation>
				<xs:documentation>
				Job is active.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="Suspended">
			<xs:annotation>
				<xs:documentation>
				Job is suspended.
				</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
	</xs:restriction>
</xs:simpleType>

</xs:schema>
  </wsdl:types>
  <wsdl:message name="getRecurringJobsResponse">
    <wsdl:part name="params" element="ns0:getRecurringJobsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="startDownloadJobRequest">
    <wsdl:part name="params" element="ns0:startDownloadJobRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecurringJobExecutionStatusRequest">
    <wsdl:part name="params" element="ns0:getRecurringJobExecutionStatusRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getJobStatusResponse">
    <wsdl:part name="params" element="ns0:getJobStatusResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getJobStatusRequest">
    <wsdl:part name="params" element="ns0:getJobStatusRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="startUploadJobRequest">
    <wsdl:part name="params" element="ns0:startUploadJobRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="startDownloadJobResponse">
    <wsdl:part name="params" element="ns0:startDownloadJobResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="suspendRecurringJobRequest">
    <wsdl:part name="params" element="ns0:suspendRecurringJobRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecurringJobExecutionHistoryResponse">
    <wsdl:part name="params" element="ns0:getRecurringJobExecutionHistoryResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRecurringJobRequest">
    <wsdl:part name="params" element="ns0:createRecurringJobRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecurringJobsRequest">
    <wsdl:part name="params" element="ns0:getRecurringJobsRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getJobsResponse">
    <wsdl:part name="params" element="ns0:getJobsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="abortRecurringJobExecutionResponse">
    <wsdl:part name="params" element="ns0:abortRecurringJobExecutionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="abortRecurringJobExecutionRequest">
    <wsdl:part name="params" element="ns0:abortRecurringJobExecutionRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecurringJobRequest">
    <wsdl:part name="params" element="ns0:deleteRecurringJobRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getJobsRequest">
    <wsdl:part name="params" element="ns0:getJobsRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="abortJobRequest">
    <wsdl:part name="params" element="ns0:abortJobRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="suspendRecurringJobResponse">
    <wsdl:part name="params" element="ns0:suspendRecurringJobResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRecurringJobResponse">
    <wsdl:part name="params" element="ns0:createRecurringJobResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecurringJobExecutionHistoryRequest">
    <wsdl:part name="params" element="ns0:getRecurringJobExecutionHistoryRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="activateRecurringJobRequest">
    <wsdl:part name="params" element="ns0:activateRecurringJobRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="startUploadJobResponse">
    <wsdl:part name="params" element="ns0:startUploadJobResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecurringJobExecutionStatusResponse">
    <wsdl:part name="params" element="ns0:getRecurringJobExecutionStatusResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="activateRecurringJobResponse">
    <wsdl:part name="params" element="ns0:activateRecurringJobResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createUploadJobRequest">
    <wsdl:part name="params" element="ns0:createUploadJobRequest">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="abortJobResponse">
    <wsdl:part name="params" element="ns0:abortJobResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecurringJobResponse">
    <wsdl:part name="params" element="ns0:deleteRecurringJobResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createUploadJobResponse">
    <wsdl:part name="params" element="ns0:createUploadJobResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="BulkDataExchangeServicePort">
    <wsdl:operation name="createUploadJob">
      <wsdl:input message="ns0:createUploadJobRequest">
    </wsdl:input>
      <wsdl:output message="ns0:createUploadJobResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startUploadJob">
      <wsdl:input message="ns0:startUploadJobRequest">
    </wsdl:input>
      <wsdl:output message="ns0:startUploadJobResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="abortJob">
      <wsdl:input message="ns0:abortJobRequest">
    </wsdl:input>
      <wsdl:output message="ns0:abortJobResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getJobs">
      <wsdl:input message="ns0:getJobsRequest">
    </wsdl:input>
      <wsdl:output message="ns0:getJobsResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getJobStatus">
      <wsdl:input message="ns0:getJobStatusRequest">
    </wsdl:input>
      <wsdl:output message="ns0:getJobStatusResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startDownloadJob">
      <wsdl:input message="ns0:startDownloadJobRequest">
    </wsdl:input>
      <wsdl:output message="ns0:startDownloadJobResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createRecurringJob">
      <wsdl:input message="ns0:createRecurringJobRequest">
    </wsdl:input>
      <wsdl:output message="ns0:createRecurringJobResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecurringJob">
      <wsdl:input message="ns0:deleteRecurringJobRequest">
    </wsdl:input>
      <wsdl:output message="ns0:deleteRecurringJobResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecurringJobs">
      <wsdl:input message="ns0:getRecurringJobsRequest">
    </wsdl:input>
      <wsdl:output message="ns0:getRecurringJobsResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecurringJobExecutionStatus">
      <wsdl:input message="ns0:getRecurringJobExecutionStatusRequest">
    </wsdl:input>
      <wsdl:output message="ns0:getRecurringJobExecutionStatusResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecurringJobExecutionHistory">
      <wsdl:input message="ns0:getRecurringJobExecutionHistoryRequest">
    </wsdl:input>
      <wsdl:output message="ns0:getRecurringJobExecutionHistoryResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="activateRecurringJob">
      <wsdl:input message="ns0:activateRecurringJobRequest">
    </wsdl:input>
      <wsdl:output message="ns0:activateRecurringJobResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="suspendRecurringJob">
      <wsdl:input message="ns0:suspendRecurringJobRequest">
    </wsdl:input>
      <wsdl:output message="ns0:suspendRecurringJobResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="abortRecurringJobExecution">
      <wsdl:input message="ns0:abortRecurringJobExecutionRequest">
    </wsdl:input>
      <wsdl:output message="ns0:abortRecurringJobExecutionResponse">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BulkDataExchangeServiceHttpBinding" type="ns0:BulkDataExchangeServicePort">
    <http:binding verb="POST"/>
    <wsdl:operation name="createUploadJob">
      <http:operation location="BulkDataExchangeService/createUploadJob"/>
      <wsdl:input>
        <mime:content part="createUploadJob" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="createUploadJob" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startUploadJob">
      <http:operation location="BulkDataExchangeService/startUploadJob"/>
      <wsdl:input>
        <mime:content part="startUploadJob" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="startUploadJob" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="abortJob">
      <http:operation location="BulkDataExchangeService/abortJob"/>
      <wsdl:input>
        <mime:content part="abortJob" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="abortJob" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getJobs">
      <http:operation location="BulkDataExchangeService/getJobs"/>
      <wsdl:input>
        <mime:content part="getJobs" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="getJobs" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getJobStatus">
      <http:operation location="BulkDataExchangeService/getJobStatus"/>
      <wsdl:input>
        <mime:content part="getJobStatus" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="getJobStatus" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startDownloadJob">
      <http:operation location="BulkDataExchangeService/startDownloadJob"/>
      <wsdl:input>
        <mime:content part="startDownloadJob" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="startDownloadJob" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createRecurringJob">
      <http:operation location="BulkDataExchangeService/createRecurringJob"/>
      <wsdl:input>
        <mime:content part="createRecurringJob" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="createRecurringJob" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecurringJob">
      <http:operation location="BulkDataExchangeService/deleteRecurringJob"/>
      <wsdl:input>
        <mime:content part="deleteRecurringJob" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="deleteRecurringJob" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecurringJobs">
      <http:operation location="BulkDataExchangeService/getRecurringJobs"/>
      <wsdl:input>
        <mime:content part="getRecurringJobs" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="getRecurringJobs" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecurringJobExecutionStatus">
      <http:operation location="BulkDataExchangeService/getRecurringJobExecutionStatus"/>
      <wsdl:input>
        <mime:content part="getRecurringJobExecutionStatus" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="getRecurringJobExecutionStatus" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecurringJobExecutionHistory">
      <http:operation location="BulkDataExchangeService/getRecurringJobExecutionHistory"/>
      <wsdl:input>
        <mime:content part="getRecurringJobExecutionHistory" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="getRecurringJobExecutionHistory" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="activateRecurringJob">
      <http:operation location="BulkDataExchangeService/activateRecurringJob"/>
      <wsdl:input>
        <mime:content part="activateRecurringJob" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="activateRecurringJob" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="suspendRecurringJob">
      <http:operation location="BulkDataExchangeService/suspendRecurringJob"/>
      <wsdl:input>
        <mime:content part="suspendRecurringJob" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="suspendRecurringJob" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="abortRecurringJobExecution">
      <http:operation location="BulkDataExchangeService/abortRecurringJobExecution"/>
      <wsdl:input>
        <mime:content part="abortRecurringJobExecution" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="abortRecurringJobExecution" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="BulkDataExchangeServiceSOAPBinding" type="ns0:BulkDataExchangeServicePort">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="createUploadJob">
      <soap12:operation soapAction="urn:createUploadJob" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startUploadJob">
      <soap12:operation soapAction="urn:startUploadJob" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="abortJob">
      <soap12:operation soapAction="urn:abortJob" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getJobs">
      <soap12:operation soapAction="urn:getJobs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getJobStatus">
      <soap12:operation soapAction="urn:getJobStatus" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="startDownloadJob">
      <soap12:operation soapAction="urn:startDownloadJob" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createRecurringJob">
      <soap12:operation soapAction="urn:createRecurringJob" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecurringJob">
      <soap12:operation soapAction="urn:deleteRecurringJob" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecurringJobs">
      <soap12:operation soapAction="urn:getRecurringJobs" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecurringJobExecutionStatus">
      <soap12:operation soapAction="urn:getRecurringJobExecutionStatus" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecurringJobExecutionHistory">
      <soap12:operation soapAction="urn:getRecurringJobExecutionHistory" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="activateRecurringJob">
      <soap12:operation soapAction="urn:activateRecurringJob" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="suspendRecurringJob">
      <soap12:operation soapAction="urn:suspendRecurringJob" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="abortRecurringJobExecution">
      <soap12:operation soapAction="urn:abortRecurringJobExecution" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="BulkDataExchangeService">
		<wsdl:documentation>
			<Version>1.0.0</Version>
		</wsdl:documentation>
    <wsdl:port name="BulkDataExchangeServiceHttp" binding="ns0:BulkDataExchangeServiceHttpBinding">
      <http:address location="http://webservices.ebay.com/BulkDataExchangeService"/>
    </wsdl:port>
    <wsdl:port name="BulkDataExchangeServiceSOAP" binding="ns0:BulkDataExchangeServiceSOAPBinding">
      <soap12:address location="http://webservices.ebay.com/BulkDataExchangeService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
