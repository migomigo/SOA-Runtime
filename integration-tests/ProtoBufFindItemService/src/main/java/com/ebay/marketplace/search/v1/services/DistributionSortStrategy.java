//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-792 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.04.07 at 12:06:52 PM GMT+05:30 
//


package com.ebay.marketplace.search.v1.services;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DistributionSortStrategy.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DistributionSortStrategy">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="DemandSupplyCoverage"/>
 *     &lt;enumeration value="Supply"/>
 *     &lt;enumeration value="Demand"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DistributionSortStrategy")
@XmlEnum
public enum DistributionSortStrategy {


    /**
     * 
     * 								This is the type to choose if the
     * 								distribution
     * 								needs to be sorted by
     * 								demand-supply aggregated coverage
     * 								scores.
     * 							
     * 
     */
    @XmlEnumValue("DemandSupplyCoverage")
    DEMAND_SUPPLY_COVERAGE("DemandSupplyCoverage"),

    /**
     * 
     * 								This is the type to choose if the
     * 								distribution
     * 								needs to be sorted by
     * 								supply only (no demand involved).
     * 							
     * 
     */
    @XmlEnumValue("Supply")
    SUPPLY("Supply"),

    /**
     * 
     * 								This is the type to choose if the
     * 								distribution
     * 								needs to be sorted by
     * 								demand only (no supply involved).
     * 							
     * 
     */
    @XmlEnumValue("Demand")
    DEMAND("Demand");
    private final String value;

    DistributionSortStrategy(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DistributionSortStrategy fromValue(String v) {
        for (DistributionSortStrategy c: DistributionSortStrategy.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
